// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: spacemesh/v1/app_types.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Spacemesh app primitive variable types
type PrimitiveType int32

const (
	PrimitiveType_PRIMITIVE_TYPE_UNSPECIFIED PrimitiveType = 0
	PrimitiveType_PRIMITIVE_TYPE_I8          PrimitiveType = 1
	PrimitiveType_PRIMITIVE_TYPE_U8          PrimitiveType = 2
	PrimitiveType_PRIMITIVE_TYPE_I16         PrimitiveType = 3
	PrimitiveType_PRIMITIVE_TYPE_U16         PrimitiveType = 4
	PrimitiveType_PRIMITIVE_TYPE_I32         PrimitiveType = 5
	PrimitiveType_PRIMITIVE_TYPE_U32         PrimitiveType = 6
	PrimitiveType_PRIMITIVE_TYPE_I64         PrimitiveType = 7
	PrimitiveType_PRIMITIVE_TYPE_U64         PrimitiveType = 8
	PrimitiveType_PRIMITIVE_TYPE_BOOL        PrimitiveType = 9
	PrimitiveType_PRIMITIVE_TYPE_AMOUNT      PrimitiveType = 10
	PrimitiveType_PRIMITIVE_TYPE_ADDRESS     PrimitiveType = 11 // future supported primitive types will be added here
)

// Enum value maps for PrimitiveType.
var (
	PrimitiveType_name = map[int32]string{
		0:  "PRIMITIVE_TYPE_UNSPECIFIED",
		1:  "PRIMITIVE_TYPE_I8",
		2:  "PRIMITIVE_TYPE_U8",
		3:  "PRIMITIVE_TYPE_I16",
		4:  "PRIMITIVE_TYPE_U16",
		5:  "PRIMITIVE_TYPE_I32",
		6:  "PRIMITIVE_TYPE_U32",
		7:  "PRIMITIVE_TYPE_I64",
		8:  "PRIMITIVE_TYPE_U64",
		9:  "PRIMITIVE_TYPE_BOOL",
		10: "PRIMITIVE_TYPE_AMOUNT",
		11: "PRIMITIVE_TYPE_ADDRESS",
	}
	PrimitiveType_value = map[string]int32{
		"PRIMITIVE_TYPE_UNSPECIFIED": 0,
		"PRIMITIVE_TYPE_I8":          1,
		"PRIMITIVE_TYPE_U8":          2,
		"PRIMITIVE_TYPE_I16":         3,
		"PRIMITIVE_TYPE_U16":         4,
		"PRIMITIVE_TYPE_I32":         5,
		"PRIMITIVE_TYPE_U32":         6,
		"PRIMITIVE_TYPE_I64":         7,
		"PRIMITIVE_TYPE_U64":         8,
		"PRIMITIVE_TYPE_BOOL":        9,
		"PRIMITIVE_TYPE_AMOUNT":      10,
		"PRIMITIVE_TYPE_ADDRESS":     11,
	}
)

func (x PrimitiveType) Enum() *PrimitiveType {
	p := new(PrimitiveType)
	*p = x
	return p
}

func (x PrimitiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrimitiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_app_types_proto_enumTypes[0].Descriptor()
}

func (PrimitiveType) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_app_types_proto_enumTypes[0]
}

func (x PrimitiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrimitiveType.Descriptor instead.
func (PrimitiveType) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{0}
}

type VariableType int32

const (
	VariableType_VARIABLE_TYPE_UNSPECIFIED        VariableType = 0
	VariableType_VARIABLE_TYPE_PRIMITIVE          VariableType = 1
	VariableType_VARIABLE_TYPE_FIXED_SIZE_ARRAY   VariableType = 2
	VariableType_VARIABLE_TYPE_DYNAMIC_SIZE_ARRAY VariableType = 3
)

// Enum value maps for VariableType.
var (
	VariableType_name = map[int32]string{
		0: "VARIABLE_TYPE_UNSPECIFIED",
		1: "VARIABLE_TYPE_PRIMITIVE",
		2: "VARIABLE_TYPE_FIXED_SIZE_ARRAY",
		3: "VARIABLE_TYPE_DYNAMIC_SIZE_ARRAY",
	}
	VariableType_value = map[string]int32{
		"VARIABLE_TYPE_UNSPECIFIED":        0,
		"VARIABLE_TYPE_PRIMITIVE":          1,
		"VARIABLE_TYPE_FIXED_SIZE_ARRAY":   2,
		"VARIABLE_TYPE_DYNAMIC_SIZE_ARRAY": 3,
	}
)

func (x VariableType) Enum() *VariableType {
	p := new(VariableType)
	*p = x
	return p
}

func (x VariableType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VariableType) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_app_types_proto_enumTypes[1].Descriptor()
}

func (VariableType) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_app_types_proto_enumTypes[1]
}

func (x VariableType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VariableType.Descriptor instead.
func (VariableType) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{1}
}

type MethodType int32

const (
	MethodType_METHOD_TYPE_UNSPECIFIED MethodType = 0
	MethodType_METHOD_TYPE_CONSTRUCTOR MethodType = 1 // method can be used in spwan app to init storage
	MethodType_METHOD_TYPE_STANDARD    MethodType = 2 // standard method
)

// Enum value maps for MethodType.
var (
	MethodType_name = map[int32]string{
		0: "METHOD_TYPE_UNSPECIFIED",
		1: "METHOD_TYPE_CONSTRUCTOR",
		2: "METHOD_TYPE_STANDARD",
	}
	MethodType_value = map[string]int32{
		"METHOD_TYPE_UNSPECIFIED": 0,
		"METHOD_TYPE_CONSTRUCTOR": 1,
		"METHOD_TYPE_STANDARD":    2,
	}
)

func (x MethodType) Enum() *MethodType {
	p := new(MethodType)
	*p = x
	return p
}

func (x MethodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MethodType) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_app_types_proto_enumTypes[2].Descriptor()
}

func (MethodType) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_app_types_proto_enumTypes[2]
}

func (x MethodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MethodType.Descriptor instead.
func (MethodType) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{2}
}

type TemplateDataFlags int32

const (
	TemplateDataFlags_TEMPLATE_DATA_FLAGS_UNSPECIFIED    TemplateDataFlags = 0
	TemplateDataFlags_TEMPLATE_DATA_FLAGS_CODE           TemplateDataFlags = 1
	TemplateDataFlags_TEMPLATE_DATA_FLAGS_STORAGE_LAYOUT TemplateDataFlags = 2
	TemplateDataFlags_TEMPLATE_DATA_FLAGS_API            TemplateDataFlags = 4
)

// Enum value maps for TemplateDataFlags.
var (
	TemplateDataFlags_name = map[int32]string{
		0: "TEMPLATE_DATA_FLAGS_UNSPECIFIED",
		1: "TEMPLATE_DATA_FLAGS_CODE",
		2: "TEMPLATE_DATA_FLAGS_STORAGE_LAYOUT",
		4: "TEMPLATE_DATA_FLAGS_API",
	}
	TemplateDataFlags_value = map[string]int32{
		"TEMPLATE_DATA_FLAGS_UNSPECIFIED":    0,
		"TEMPLATE_DATA_FLAGS_CODE":           1,
		"TEMPLATE_DATA_FLAGS_STORAGE_LAYOUT": 2,
		"TEMPLATE_DATA_FLAGS_API":            4,
	}
)

func (x TemplateDataFlags) Enum() *TemplateDataFlags {
	p := new(TemplateDataFlags)
	*p = x
	return p
}

func (x TemplateDataFlags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TemplateDataFlags) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_app_types_proto_enumTypes[3].Descriptor()
}

func (TemplateDataFlags) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_app_types_proto_enumTypes[3]
}

func (x TemplateDataFlags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TemplateDataFlags.Descriptor instead.
func (TemplateDataFlags) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{3}
}

// Variable metadata
type VariableMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                            // var index in app's state
	Name           string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                         // var name
	PrimitiveType  PrimitiveType `protobuf:"varint,3,opt,name=primitive_type,json=primitiveType,proto3,enum=spacemesh.v1.PrimitiveType" json:"primitive_type,omitempty"` // type
	VariableType   VariableType  `protobuf:"varint,4,opt,name=variable_type,json=variableType,proto3,enum=spacemesh.v1.VariableType" json:"variable_type,omitempty"`
	PrimitiveCount uint32        `protobuf:"varint,5,opt,name=primitive_count,json=primitiveCount,proto3" json:"primitive_count,omitempty"` // 1 for primitive. 1 or more for fixed. 0 for dynamic.
}

func (x *VariableMetadata) Reset() {
	*x = VariableMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableMetadata) ProtoMessage() {}

func (x *VariableMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableMetadata.ProtoReflect.Descriptor instead.
func (*VariableMetadata) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{0}
}

func (x *VariableMetadata) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VariableMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VariableMetadata) GetPrimitiveType() PrimitiveType {
	if x != nil {
		return x.PrimitiveType
	}
	return PrimitiveType_PRIMITIVE_TYPE_UNSPECIFIED
}

func (x *VariableMetadata) GetVariableType() VariableType {
	if x != nil {
		return x.VariableType
	}
	return VariableType_VARIABLE_TYPE_UNSPECIFIED
}

func (x *VariableMetadata) GetPrimitiveCount() uint32 {
	if x != nil {
		return x.PrimitiveCount
	}
	return 0
}

type ValuesArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ValuesArray) Reset() {
	*x = ValuesArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuesArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuesArray) ProtoMessage() {}

func (x *ValuesArray) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValuesArray.ProtoReflect.Descriptor instead.
func (*ValuesArray) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{1}
}

func (x *ValuesArray) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

// The metadata and value of an app's variable
type Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *VariableMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Types that are assignable to Data:
	//	*Variable_Value
	//	*Variable_Values
	Data isVariable_Data `protobuf_oneof:"data"`
}

func (x *Variable) Reset() {
	*x = Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{2}
}

func (x *Variable) GetMetadata() *VariableMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (m *Variable) GetData() isVariable_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Variable) GetValue() []byte {
	if x, ok := x.GetData().(*Variable_Value); ok {
		return x.Value
	}
	return nil
}

func (x *Variable) GetValues() *ValuesArray {
	if x, ok := x.GetData().(*Variable_Values); ok {
		return x.Values
	}
	return nil
}

type isVariable_Data interface {
	isVariable_Data()
}

type Variable_Value struct {
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3,oneof"` // since bytes size is arbitrary - this will support future var types
}

type Variable_Values struct {
	Values *ValuesArray `protobuf:"bytes,3,opt,name=values,proto3,oneof"` // for both fixed and dynamic size arrays
}

func (*Variable_Value) isVariable_Data() {}

func (*Variable_Values) isVariable_Data() {}

type NamedVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Variable *Variable `protobuf:"bytes,2,opt,name=variable,proto3" json:"variable,omitempty"`
}

func (x *NamedVariable) Reset() {
	*x = NamedVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedVariable) ProtoMessage() {}

func (x *NamedVariable) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedVariable.ProtoReflect.Descriptor instead.
func (*NamedVariable) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{3}
}

func (x *NamedVariable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamedVariable) GetVariable() *Variable {
	if x != nil {
		return x.Variable
	}
	return nil
}

type Method struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MethodType MethodType       `protobuf:"varint,2,opt,name=method_type,json=methodType,proto3,enum=spacemesh.v1.MethodType" json:"method_type,omitempty"`
	InputVars  []*NamedVariable `protobuf:"bytes,3,rep,name=input_vars,json=inputVars,proto3" json:"input_vars,omitempty"`    // ordered
	OutputVars []*NamedVariable `protobuf:"bytes,4,rep,name=output_vars,json=outputVars,proto3" json:"output_vars,omitempty"` // ordered
	GasUnits   uint64           `protobuf:"varint,5,opt,name=gas_units,json=gasUnits,proto3" json:"gas_units,omitempty"`      // gas cost in units
}

func (x *Method) Reset() {
	*x = Method{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Method) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Method) ProtoMessage() {}

func (x *Method) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Method.ProtoReflect.Descriptor instead.
func (*Method) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{4}
}

func (x *Method) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Method) GetMethodType() MethodType {
	if x != nil {
		return x.MethodType
	}
	return MethodType_METHOD_TYPE_UNSPECIFIED
}

func (x *Method) GetInputVars() []*NamedVariable {
	if x != nil {
		return x.InputVars
	}
	return nil
}

func (x *Method) GetOutputVars() []*NamedVariable {
	if x != nil {
		return x.OutputVars
	}
	return nil
}

func (x *Method) GetGasUnits() uint64 {
	if x != nil {
		return x.GasUnits
	}
	return 0
}

// Api defines a template's code api which includes constructor and standard methods
// An app api is defined by its template api
type Api struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Methods []*Method `protobuf:"bytes,1,rep,name=methods,proto3" json:"methods,omitempty"`
}

func (x *Api) Reset() {
	*x = Api{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Api) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Api) ProtoMessage() {}

func (x *Api) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Api.ProtoReflect.Descriptor instead.
func (*Api) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{5}
}

func (x *Api) GetMethods() []*Method {
	if x != nil {
		return x.Methods
	}
	return nil
}

type StorageLayout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*VariableMetadata `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *StorageLayout) Reset() {
	*x = StorageLayout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageLayout) ProtoMessage() {}

func (x *StorageLayout) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageLayout.ProtoReflect.Descriptor instead.
func (*StorageLayout) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{6}
}

func (x *StorageLayout) GetItems() []*VariableMetadata {
	if x != nil {
		return x.Items
	}
	return nil
}

// The address of an app template in the templates global state store
type TemplateAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *TemplateAddress) Reset() {
	*x = TemplateAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateAddress) ProtoMessage() {}

func (x *TemplateAddress) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateAddress.ProtoReflect.Descriptor instead.
func (*TemplateAddress) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{7}
}

func (x *TemplateAddress) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type Code struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                   // program name
	CodeVersion      string   `protobuf:"bytes,2,opt,name=code_version,json=codeVersion,proto3" json:"code_version,omitempty"`                  // semantic version at compile time
	TargetSvmVersion string   `protobuf:"bytes,3,opt,name=target_svm_version,json=targetSvmVersion,proto3" json:"target_svm_version,omitempty"` // at deploy time
	Code             [][]byte `protobuf:"bytes,4,rep,name=code,proto3" json:"code,omitempty"`                                                   // wasm code
}

func (x *Code) Reset() {
	*x = Code{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Code) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Code) ProtoMessage() {}

func (x *Code) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Code.ProtoReflect.Descriptor instead.
func (*Code) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{8}
}

func (x *Code) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Code) GetCodeVersion() string {
	if x != nil {
		return x.CodeVersion
	}
	return ""
}

func (x *Code) GetTargetSvmVersion() string {
	if x != nil {
		return x.TargetSvmVersion
	}
	return ""
}

func (x *Code) GetCode() [][]byte {
	if x != nil {
		return x.Code
	}
	return nil
}

// Information about an app template in the global state store
type Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *TemplateAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // template address
	Name    string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // template name
	Api     *Api             `protobuf:"bytes,3,opt,name=api,proto3" json:"api,omitempty"`         // the template code api
	// note - the author can be obtained from the deploy transaction but it is nice to have it here
	Author *AccountId `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"` // template uploader
	// The layer can be obtained from the tx receipt but it is convenient to have it here
	DeployLayer   *LayerNumber   `protobuf:"bytes,5,opt,name=deploy_layer,json=deployLayer,proto3" json:"deploy_layer,omitempty"`       // layer that the template was deployed - 0 for genesis templates
	DeployTxId    *TransactionId `protobuf:"bytes,6,opt,name=deploy_tx_id,json=deployTxId,proto3" json:"deploy_tx_id,omitempty"`        // the id of the deploy template transaction. Empty for genesis templates.
	Code          *Code          `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`                                        // template wasm code
	StorageLayout *StorageLayout `protobuf:"bytes,8,opt,name=storage_layout,json=storageLayout,proto3" json:"storage_layout,omitempty"` // template storage layout
}

func (x *Template) Reset() {
	*x = Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template) ProtoMessage() {}

func (x *Template) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template.ProtoReflect.Descriptor instead.
func (*Template) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{9}
}

func (x *Template) GetAddress() *TemplateAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Template) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Template) GetApi() *Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *Template) GetAuthor() *AccountId {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Template) GetDeployLayer() *LayerNumber {
	if x != nil {
		return x.DeployLayer
	}
	return nil
}

func (x *Template) GetDeployTxId() *TransactionId {
	if x != nil {
		return x.DeployTxId
	}
	return nil
}

func (x *Template) GetCode() *Code {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *Template) GetStorageLayout() *StorageLayout {
	if x != nil {
		return x.StorageLayout
	}
	return nil
}

// A Spacemesh app
// Note that both layer and spawner can be obtained from the transaction and transaction id for apps spawned by a transaction
// but is convenient to return them directly as part of apps' metadata.
type App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         *AccountId       `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                                        // App's address in global space
	Name            string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                              // short descriptive name
	TemplateAddress *TemplateAddress `protobuf:"bytes,3,opt,name=template_address,json=templateAddress,proto3" json:"template_address,omitempty"` // App's template address
	SpawnLayer      *LayerNumber     `protobuf:"bytes,4,opt,name=spawn_layer,json=spawnLayer,proto3" json:"spawn_layer,omitempty"`                // Layer in which app was spawned
	SpawnTxId       *TransactionId   `protobuf:"bytes,5,opt,name=spawn_tx_id,json=spawnTxId,proto3" json:"spawn_tx_id,omitempty"`                 // Transaction which spawned the app. empty for genesis apps.
	Spawner         *AccountId       `protobuf:"bytes,6,opt,name=spawner,proto3" json:"spawner,omitempty"`                                        // App spawner account
	Variables       []*Variable      `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty"`                                    // ordered array of app vars and their values
}

func (x *App) Reset() {
	*x = App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{10}
}

func (x *App) GetAddress() *AccountId {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetTemplateAddress() *TemplateAddress {
	if x != nil {
		return x.TemplateAddress
	}
	return nil
}

func (x *App) GetSpawnLayer() *LayerNumber {
	if x != nil {
		return x.SpawnLayer
	}
	return nil
}

func (x *App) GetSpawnTxId() *TransactionId {
	if x != nil {
		return x.SpawnTxId
	}
	return nil
}

func (x *App) GetSpawner() *AccountId {
	if x != nil {
		return x.Spawner
	}
	return nil
}

func (x *App) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

// A request to return a template by address from the template global state store
type GetTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   *TemplateAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                       // template address
	DataFlags uint32           `protobuf:"varint,2,opt,name=data_flags,json=dataFlags,proto3" json:"data_flags,omitempty"` // a bit field of TemplateDataFlags values
}

func (x *GetTemplateRequest) Reset() {
	*x = GetTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateRequest) ProtoMessage() {}

func (x *GetTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{11}
}

func (x *GetTemplateRequest) GetAddress() *TemplateAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetTemplateRequest) GetDataFlags() uint32 {
	if x != nil {
		return x.DataFlags
	}
	return 0
}

// A response with AppTemplate data
type GetTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template *Template `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *GetTemplateResponse) Reset() {
	*x = GetTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateResponse) ProtoMessage() {}

func (x *GetTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetTemplateResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{12}
}

func (x *GetTemplateResponse) GetTemplate() *Template {
	if x != nil {
		return x.Template
	}
	return nil
}

// A request to return all templates from the templates global state store with pagination
type GetTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxResults uint32 `protobuf:"varint,1,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"` // max number of results to return
	Offset     uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`                           // query offset
	DataFlags  uint32 `protobuf:"varint,3,opt,name=data_flags,json=dataFlags,proto3" json:"data_flags,omitempty"`    // a bit field of TemplateDataFlags values
}

func (x *GetTemplatesRequest) Reset() {
	*x = GetTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplatesRequest) ProtoMessage() {}

func (x *GetTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{13}
}

func (x *GetTemplatesRequest) GetMaxResults() uint32 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

func (x *GetTemplatesRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTemplatesRequest) GetDataFlags() uint32 {
	if x != nil {
		return x.DataFlags
	}
	return 0
}

// A response includes total templates available in store and a list of zero ore more templates
type GetTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalResults uint32      `protobuf:"varint,1,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"` // total number of templates
	Templates    []*Template `protobuf:"bytes,2,rep,name=templates,proto3" json:"templates,omitempty"`
}

func (x *GetTemplatesResponse) Reset() {
	*x = GetTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplatesResponse) ProtoMessage() {}

func (x *GetTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{14}
}

func (x *GetTemplatesResponse) GetTotalResults() uint32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *GetTemplatesResponse) GetTemplates() []*Template {
	if x != nil {
		return x.Templates
	}
	return nil
}

// A request to get an app's variable by var id
type GetVariableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     *AccountId   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                            // app's address
	LayerNumber *LayerNumber `protobuf:"bytes,2,opt,name=layer_number,json=layerNumber,proto3" json:"layer_number,omitempty"` // requested value as of a layer. Pass MAX_UI32 to get latest value
	Id          uint32       `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                     // app's var id - var's unique identifier
}

func (x *GetVariableRequest) Reset() {
	*x = GetVariableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVariableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVariableRequest) ProtoMessage() {}

func (x *GetVariableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVariableRequest.ProtoReflect.Descriptor instead.
func (*GetVariableRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{15}
}

func (x *GetVariableRequest) GetAddress() *AccountId {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetVariableRequest) GetLayerNumber() *LayerNumber {
	if x != nil {
		return x.LayerNumber
	}
	return nil
}

func (x *GetVariableRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// A response with variable meta-data and value
type GetVariableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VariableValue *Variable `protobuf:"bytes,1,opt,name=variable_value,json=variableValue,proto3" json:"variable_value,omitempty"`
}

func (x *GetVariableResponse) Reset() {
	*x = GetVariableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVariableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVariableResponse) ProtoMessage() {}

func (x *GetVariableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVariableResponse.ProtoReflect.Descriptor instead.
func (*GetVariableResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{16}
}

func (x *GetVariableResponse) GetVariableValue() *Variable {
	if x != nil {
		return x.VariableValue
	}
	return nil
}

// A request to get a deployed app metadata and optionally all variable values as of a specific layer or latest state.
type GetAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address          *AccountId   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                                              // app address
	LayerNumber      *LayerNumber `protobuf:"bytes,2,opt,name=layer_number,json=layerNumber,proto3" json:"layer_number,omitempty"`                   // layer for state. Ignored when include_var_values is set to false. pass MAX_UI32 to get latest state.
	IncludeVarValues bool         `protobuf:"varint,3,opt,name=include_var_values,json=includeVarValues,proto3" json:"include_var_values,omitempty"` // when true, var values will be included in response, false otherwise.
}

func (x *GetAppRequest) Reset() {
	*x = GetAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppRequest) ProtoMessage() {}

func (x *GetAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppRequest.ProtoReflect.Descriptor instead.
func (*GetAppRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{17}
}

func (x *GetAppRequest) GetAddress() *AccountId {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetAppRequest) GetLayerNumber() *LayerNumber {
	if x != nil {
		return x.LayerNumber
	}
	return nil
}

func (x *GetAppRequest) GetIncludeVarValues() bool {
	if x != nil {
		return x.IncludeVarValues
	}
	return false
}

type GetAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App *App `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *GetAppResponse) Reset() {
	*x = GetAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_app_types_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppResponse) ProtoMessage() {}

func (x *GetAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_app_types_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppResponse.ProtoReflect.Descriptor instead.
func (*GetAppResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_app_types_proto_rawDescGZIP(), []int{18}
}

func (x *GetAppResponse) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

var File_spacemesh_v1_app_types_proto protoreflect.FileDescriptor

var file_spacemesh_v1_app_types_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x01, 0x0a, 0x10, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x42, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x25, 0x0a,
	0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x57, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x06,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x76,
	0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x72,
	0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x61, 0x72, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x03,
	0x41, 0x70, 0x69, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x22, 0x45, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2b, 0x0a, 0x0f, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x7f, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x73, 0x76, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x76, 0x6d, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x96, 0x03, 0x0a, 0x08, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x5f, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x54, 0x78, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a,
	0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x22, 0xf8, 0x02, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x48, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x70,
	0x61, 0x77, 0x6e, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x77,
	0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f,
	0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x54,
	0x78, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x49, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x22, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x0b, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x54, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x56, 0x61, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x2a, 0xbd, 0x02,
	0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x38, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54,
	0x49, 0x56, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x38, 0x10, 0x02, 0x12, 0x16, 0x0a,
	0x12, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x31, 0x36, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49,
	0x56, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x31, 0x36, 0x10, 0x04, 0x12, 0x16, 0x0a,
	0x12, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x33, 0x32, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49,
	0x56, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x33, 0x32, 0x10, 0x06, 0x12, 0x16, 0x0a,
	0x12, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x36, 0x34, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49,
	0x56, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x36, 0x34, 0x10, 0x08, 0x12, 0x17, 0x0a,
	0x13, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54,
	0x49, 0x56, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x10,
	0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x0b, 0x2a, 0x94, 0x01,
	0x0a, 0x0c, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x19, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a,
	0x17, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x56, 0x41,
	0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x45,
	0x44, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x02, 0x12, 0x24,
	0x0a, 0x20, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x41, 0x52, 0x52,
	0x41, 0x59, 0x10, 0x03, 0x2a, 0x60, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x4e,
	0x44, 0x41, 0x52, 0x44, 0x10, 0x02, 0x2a, 0x9b, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x1f,
	0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x4c,
	0x41, 0x47, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12,
	0x26, 0x0a, 0x22, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x46, 0x4c, 0x41, 0x47, 0x53, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x4c,
	0x41, 0x59, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x45, 0x4d, 0x50, 0x4c,
	0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x53, 0x5f, 0x41,
	0x50, 0x49, 0x10, 0x04, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x6f, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_spacemesh_v1_app_types_proto_rawDescOnce sync.Once
	file_spacemesh_v1_app_types_proto_rawDescData = file_spacemesh_v1_app_types_proto_rawDesc
)

func file_spacemesh_v1_app_types_proto_rawDescGZIP() []byte {
	file_spacemesh_v1_app_types_proto_rawDescOnce.Do(func() {
		file_spacemesh_v1_app_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_spacemesh_v1_app_types_proto_rawDescData)
	})
	return file_spacemesh_v1_app_types_proto_rawDescData
}

var file_spacemesh_v1_app_types_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_spacemesh_v1_app_types_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_spacemesh_v1_app_types_proto_goTypes = []interface{}{
	(PrimitiveType)(0),           // 0: spacemesh.v1.PrimitiveType
	(VariableType)(0),            // 1: spacemesh.v1.VariableType
	(MethodType)(0),              // 2: spacemesh.v1.MethodType
	(TemplateDataFlags)(0),       // 3: spacemesh.v1.TemplateDataFlags
	(*VariableMetadata)(nil),     // 4: spacemesh.v1.VariableMetadata
	(*ValuesArray)(nil),          // 5: spacemesh.v1.ValuesArray
	(*Variable)(nil),             // 6: spacemesh.v1.Variable
	(*NamedVariable)(nil),        // 7: spacemesh.v1.NamedVariable
	(*Method)(nil),               // 8: spacemesh.v1.Method
	(*Api)(nil),                  // 9: spacemesh.v1.Api
	(*StorageLayout)(nil),        // 10: spacemesh.v1.StorageLayout
	(*TemplateAddress)(nil),      // 11: spacemesh.v1.TemplateAddress
	(*Code)(nil),                 // 12: spacemesh.v1.Code
	(*Template)(nil),             // 13: spacemesh.v1.Template
	(*App)(nil),                  // 14: spacemesh.v1.App
	(*GetTemplateRequest)(nil),   // 15: spacemesh.v1.GetTemplateRequest
	(*GetTemplateResponse)(nil),  // 16: spacemesh.v1.GetTemplateResponse
	(*GetTemplatesRequest)(nil),  // 17: spacemesh.v1.GetTemplatesRequest
	(*GetTemplatesResponse)(nil), // 18: spacemesh.v1.GetTemplatesResponse
	(*GetVariableRequest)(nil),   // 19: spacemesh.v1.GetVariableRequest
	(*GetVariableResponse)(nil),  // 20: spacemesh.v1.GetVariableResponse
	(*GetAppRequest)(nil),        // 21: spacemesh.v1.GetAppRequest
	(*GetAppResponse)(nil),       // 22: spacemesh.v1.GetAppResponse
	(*AccountId)(nil),            // 23: spacemesh.v1.AccountId
	(*LayerNumber)(nil),          // 24: spacemesh.v1.LayerNumber
	(*TransactionId)(nil),        // 25: spacemesh.v1.TransactionId
}
var file_spacemesh_v1_app_types_proto_depIdxs = []int32{
	0,  // 0: spacemesh.v1.VariableMetadata.primitive_type:type_name -> spacemesh.v1.PrimitiveType
	1,  // 1: spacemesh.v1.VariableMetadata.variable_type:type_name -> spacemesh.v1.VariableType
	4,  // 2: spacemesh.v1.Variable.metadata:type_name -> spacemesh.v1.VariableMetadata
	5,  // 3: spacemesh.v1.Variable.values:type_name -> spacemesh.v1.ValuesArray
	6,  // 4: spacemesh.v1.NamedVariable.variable:type_name -> spacemesh.v1.Variable
	2,  // 5: spacemesh.v1.Method.method_type:type_name -> spacemesh.v1.MethodType
	7,  // 6: spacemesh.v1.Method.input_vars:type_name -> spacemesh.v1.NamedVariable
	7,  // 7: spacemesh.v1.Method.output_vars:type_name -> spacemesh.v1.NamedVariable
	8,  // 8: spacemesh.v1.Api.methods:type_name -> spacemesh.v1.Method
	4,  // 9: spacemesh.v1.StorageLayout.items:type_name -> spacemesh.v1.VariableMetadata
	11, // 10: spacemesh.v1.Template.address:type_name -> spacemesh.v1.TemplateAddress
	9,  // 11: spacemesh.v1.Template.api:type_name -> spacemesh.v1.Api
	23, // 12: spacemesh.v1.Template.author:type_name -> spacemesh.v1.AccountId
	24, // 13: spacemesh.v1.Template.deploy_layer:type_name -> spacemesh.v1.LayerNumber
	25, // 14: spacemesh.v1.Template.deploy_tx_id:type_name -> spacemesh.v1.TransactionId
	12, // 15: spacemesh.v1.Template.code:type_name -> spacemesh.v1.Code
	10, // 16: spacemesh.v1.Template.storage_layout:type_name -> spacemesh.v1.StorageLayout
	23, // 17: spacemesh.v1.App.address:type_name -> spacemesh.v1.AccountId
	11, // 18: spacemesh.v1.App.template_address:type_name -> spacemesh.v1.TemplateAddress
	24, // 19: spacemesh.v1.App.spawn_layer:type_name -> spacemesh.v1.LayerNumber
	25, // 20: spacemesh.v1.App.spawn_tx_id:type_name -> spacemesh.v1.TransactionId
	23, // 21: spacemesh.v1.App.spawner:type_name -> spacemesh.v1.AccountId
	6,  // 22: spacemesh.v1.App.variables:type_name -> spacemesh.v1.Variable
	11, // 23: spacemesh.v1.GetTemplateRequest.address:type_name -> spacemesh.v1.TemplateAddress
	13, // 24: spacemesh.v1.GetTemplateResponse.template:type_name -> spacemesh.v1.Template
	13, // 25: spacemesh.v1.GetTemplatesResponse.templates:type_name -> spacemesh.v1.Template
	23, // 26: spacemesh.v1.GetVariableRequest.address:type_name -> spacemesh.v1.AccountId
	24, // 27: spacemesh.v1.GetVariableRequest.layer_number:type_name -> spacemesh.v1.LayerNumber
	6,  // 28: spacemesh.v1.GetVariableResponse.variable_value:type_name -> spacemesh.v1.Variable
	23, // 29: spacemesh.v1.GetAppRequest.address:type_name -> spacemesh.v1.AccountId
	24, // 30: spacemesh.v1.GetAppRequest.layer_number:type_name -> spacemesh.v1.LayerNumber
	14, // 31: spacemesh.v1.GetAppResponse.app:type_name -> spacemesh.v1.App
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_spacemesh_v1_app_types_proto_init() }
func file_spacemesh_v1_app_types_proto_init() {
	if File_spacemesh_v1_app_types_proto != nil {
		return
	}
	file_spacemesh_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_spacemesh_v1_app_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuesArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Method); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Api); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageLayout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Code); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVariableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVariableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_app_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_spacemesh_v1_app_types_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Variable_Value)(nil),
		(*Variable_Values)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spacemesh_v1_app_types_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spacemesh_v1_app_types_proto_goTypes,
		DependencyIndexes: file_spacemesh_v1_app_types_proto_depIdxs,
		EnumInfos:         file_spacemesh_v1_app_types_proto_enumTypes,
		MessageInfos:      file_spacemesh_v1_app_types_proto_msgTypes,
	}.Build()
	File_spacemesh_v1_app_types_proto = out.File
	file_spacemesh_v1_app_types_proto_rawDesc = nil
	file_spacemesh_v1_app_types_proto_goTypes = nil
	file_spacemesh_v1_app_types_proto_depIdxs = nil
}

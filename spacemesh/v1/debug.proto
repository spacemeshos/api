syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "spacemesh/v1/debug_types.proto";
import "google/api/visibility.proto";

package spacemesh.v1;

// DebugService exposes methods used for mostly debugging and tests
// NOTE: The endpoints in this service are experimental and subject to change without notice.
// They should not be used in production.
service DebugService {
    option (google.api.api_visibility).restriction = "V1";

    // NetworkInfo returns p2p network information. Mostly required for integration with deployment 
    // and testing tooling.
    rpc NetworkInfo(google.protobuf.Empty) returns (NetworkInfoResponse);

    // Accounts returns data for all the accounts currently in the node's current global state.
    // This includes each account's address, nonce and balance but excludes projection of account state.
    rpc Accounts (AccountsRequest) returns (AccountsResponse) {
        option (google.api.http) = {
            post: "/v1/debug/accounts"
            body: "*"
        };
    }

    // ActiveSet returns the active set used by hare in a given epoch.
    rpc ActiveSet(ActiveSetRequest) returns (ActiveSetResponse);

    // ProposalsStream streams all proposals that are confirmed by hare.
    rpc ProposalsStream(google.protobuf.Empty) returns (stream Proposal);

    rpc ChangeLogLevel(ChangeLogLevelRequest) returns (google.protobuf.Empty);
}

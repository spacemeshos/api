syntax = "proto3";

import "google/rpc/status.proto";

package spacemesh.v2alpha1;

message Transaction {
  oneof versioned {
    TransactionV1 v1 = 1;
  }
}

message ContentsSend {
  string destination = 1; // recipient account
  uint64 amount = 2; // amount in smidge
}

message ContentsSingleSigSpawn {
  string pubkey = 1;
}

message ContentsMultiSigSpawn {
  uint32 required = 1; // number of required signatures
  repeated string pubkey = 2;
}

message TransactionContents {
  oneof contents {
    ContentsSend send = 1;
    ContentsSingleSigSpawn single_sig_spawn = 2;
    ContentsMultiSigSpawn multi_sig_spawn = 3;
  }
}

// An immutable Spacemesh transaction.
// do not include mutable data such as tx state or result.
message TransactionV1 {
  bytes id = 1;
  string principal = 2; // principal account address
  string template = 3; // template account address
  uint32 method = 4; // this is actually limited by uint8, but no type for that.
  Nonce nonce = 5;
  uint64 max_gas = 6; // max gas units consumed by tx
  uint64 gas_price = 7; // fee per unit gas, in smidge
  uint64 max_spend = 8;
  bytes raw = 9;
  enum TransactionType {
    TRANSACTION_TYPE_UNSPECIFIED = 0;
    TRANSACTION_TYPE_SINGLE_SIG_SEND = 1;
    TRANSACTION_TYPE_SINGLE_SIG_SPAWN = 2;
    TRANSACTION_TYPE_SINGLE_SIG_SELFSPAWN = 3;
    TRANSACTION_TYPE_MULTI_SIG_SEND = 4;
    TRANSACTION_TYPE_MULTI_SIG_SPAWN = 5;
    TRANSACTION_TYPE_MULTI_SIG_SELFSPAWN = 6;
  }
  TransactionType type = 10;
  TransactionContents contents = 11; // parsed transaction contents
}

message Nonce {
  uint64 counter = 1;
}
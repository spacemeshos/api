syntax = "proto3";

package spacemesh.v2alpha1;

message Reward {
  oneof versioned {
    RewardV1 v1 = 1;
  }
}

message RewardV1 {
  uint32 layer = 1; // layer award was paid in
  uint64 total = 2; // total reward paid in smidge (sum of tx fee and layer reward)
  uint64 layer_reward = 3; // tx_fee = total - layer_reward
  string coinbase = 5; // account awarded this reward
  bytes smesher = 6;  // id of smesher who earned this reward
}

message RewardRequest {
  oneof filter_by {
    string coinbase = 1;
    bytes smesher = 2;
  }
  uint32 layer = 3;
  uint64 offset = 4; // adjusts the starting point for data
  uint64 limit = 5; // specifies max number of items to fetch
}

message RewardList {
  repeated Reward rewards = 1;
}

service RewardService {
  rpc List(RewardRequest) returns (RewardList);
}
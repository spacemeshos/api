// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: spacemesh/v2alpha1/smeshing_identities.proto

package spacemeshv2alpha1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdentityState int32

const (
	IdentityState_UNSPECIFIED                          IdentityState = 0
	IdentityState_WAIT_FOR_ATX_SYNCED                  IdentityState = 1
	IdentityState_RETRYING                             IdentityState = 2
	IdentityState_WAITING_FOR_POET_REGISTRATION_WINDOW IdentityState = 3
	IdentityState_POET_CHALLENGE_READY                 IdentityState = 4
	IdentityState_POET_REGISTERED                      IdentityState = 5
	IdentityState_WAIT_FOR_POET_ROUND_END              IdentityState = 6
	IdentityState_POET_PROOF_RECEIVED                  IdentityState = 7
	IdentityState_GENERATING_POST_PROOF                IdentityState = 8
	IdentityState_POST_PROOF_READY                     IdentityState = 9
	IdentityState_ATX_READY                            IdentityState = 10
	IdentityState_ATX_BROADCASTED                      IdentityState = 11
)

// Enum value maps for IdentityState.
var (
	IdentityState_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "WAIT_FOR_ATX_SYNCED",
		2:  "RETRYING",
		3:  "WAITING_FOR_POET_REGISTRATION_WINDOW",
		4:  "POET_CHALLENGE_READY",
		5:  "POET_REGISTERED",
		6:  "WAIT_FOR_POET_ROUND_END",
		7:  "POET_PROOF_RECEIVED",
		8:  "GENERATING_POST_PROOF",
		9:  "POST_PROOF_READY",
		10: "ATX_READY",
		11: "ATX_BROADCASTED",
	}
	IdentityState_value = map[string]int32{
		"UNSPECIFIED":                          0,
		"WAIT_FOR_ATX_SYNCED":                  1,
		"RETRYING":                             2,
		"WAITING_FOR_POET_REGISTRATION_WINDOW": 3,
		"POET_CHALLENGE_READY":                 4,
		"POET_REGISTERED":                      5,
		"WAIT_FOR_POET_ROUND_END":              6,
		"POET_PROOF_RECEIVED":                  7,
		"GENERATING_POST_PROOF":                8,
		"POST_PROOF_READY":                     9,
		"ATX_READY":                            10,
		"ATX_BROADCASTED":                      11,
	}
)

func (x IdentityState) Enum() *IdentityState {
	p := new(IdentityState)
	*p = x
	return p
}

func (x IdentityState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityState) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v2alpha1_smeshing_identities_proto_enumTypes[0].Descriptor()
}

func (IdentityState) Type() protoreflect.EnumType {
	return &file_spacemesh_v2alpha1_smeshing_identities_proto_enumTypes[0]
}

func (x IdentityState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityState.Descriptor instead.
func (IdentityState) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescGZIP(), []int{0}
}

type IdentityStatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IdentityStatesRequest) Reset() {
	*x = IdentityStatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityStatesRequest) ProtoMessage() {}

func (x *IdentityStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityStatesRequest.ProtoReflect.Descriptor instead.
func (*IdentityStatesRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescGZIP(), []int{0}
}

type IdentityStateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State        IdentityState          `protobuf:"varint,1,opt,name=state,proto3,enum=spacemesh.v2alpha1.IdentityState" json:"state,omitempty"`
	PublishEpoch *uint32                `protobuf:"varint,2,opt,name=publish_epoch,json=publishEpoch,proto3,oneof" json:"publish_epoch,omitempty"`
	Message      string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Time         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *IdentityStateInfo) Reset() {
	*x = IdentityStateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityStateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityStateInfo) ProtoMessage() {}

func (x *IdentityStateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityStateInfo.ProtoReflect.Descriptor instead.
func (*IdentityStateInfo) Descriptor() ([]byte, []int) {
	return file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescGZIP(), []int{1}
}

func (x *IdentityStateInfo) GetState() IdentityState {
	if x != nil {
		return x.State
	}
	return IdentityState_UNSPECIFIED
}

func (x *IdentityStateInfo) GetPublishEpoch() uint32 {
	if x != nil && x.PublishEpoch != nil {
		return *x.PublishEpoch
	}
	return 0
}

func (x *IdentityStateInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IdentityStateInfo) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History []*IdentityStateInfo `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescGZIP(), []int{2}
}

func (x *Identity) GetHistory() []*IdentityStateInfo {
	if x != nil {
		return x.History
	}
	return nil
}

type IdentityStatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identities map[string]*Identity `protobuf:"bytes,1,rep,name=identities,proto3" json:"identities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *IdentityStatesResponse) Reset() {
	*x = IdentityStatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityStatesResponse) ProtoMessage() {}

func (x *IdentityStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityStatesResponse.ProtoReflect.Descriptor instead.
func (*IdentityStatesResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescGZIP(), []int{3}
}

func (x *IdentityStatesResponse) GetIdentities() map[string]*Identity {
	if x != nil {
		return x.Identities
	}
	return nil
}

type PoetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PoetInfoRequest) Reset() {
	*x = PoetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoetInfoRequest) ProtoMessage() {}

func (x *PoetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoetInfoRequest.ProtoReflect.Descriptor instead.
func (*PoetInfoRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescGZIP(), []int{4}
}

type PoetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhaseShift *durationpb.Duration `protobuf:"bytes,4,opt,name=phase_shift,json=phaseShift,proto3" json:"phase_shift,omitempty"`
	CycleGap   *durationpb.Duration `protobuf:"bytes,5,opt,name=cycle_gap,json=cycleGap,proto3" json:"cycle_gap,omitempty"`
}

func (x *PoetInfoResponse) Reset() {
	*x = PoetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoetInfoResponse) ProtoMessage() {}

func (x *PoetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoetInfoResponse.ProtoReflect.Descriptor instead.
func (*PoetInfoResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescGZIP(), []int{5}
}

func (x *PoetInfoResponse) GetPhaseShift() *durationpb.Duration {
	if x != nil {
		return x.PhaseShift
	}
	return nil
}

func (x *PoetInfoResponse) GetCycleGap() *durationpb.Duration {
	if x != nil {
		return x.CycleGap
	}
	return nil
}

var File_spacemesh_v2alpha1_smeshing_identities_proto protoreflect.FileDescriptor

var file_spacemesh_v2alpha1_smeshing_identities_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x32, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x17,
	0x0a, 0x15, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x11, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x4b, 0x0a, 0x08,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xd1, 0x01, 0x0a, 0x16, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x1a, 0x5b, 0x0a, 0x0f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x11, 0x0a,
	0x0f, 0x50, 0x6f, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x86, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x68, 0x61, 0x73, 0x65, 0x53, 0x68, 0x69, 0x66,
	0x74, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x67, 0x61, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x47, 0x61, 0x70, 0x2a, 0xab, 0x02, 0x0a, 0x0d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13,
	0x57, 0x41, 0x49, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x41, 0x54, 0x58, 0x5f, 0x53, 0x59, 0x4e,
	0x43, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x54, 0x52, 0x59, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46,
	0x4f, 0x52, 0x5f, 0x50, 0x4f, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x03, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x4f, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x45, 0x5f,
	0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4f, 0x45, 0x54, 0x5f,
	0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17,
	0x57, 0x41, 0x49, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x50, 0x4f, 0x45, 0x54, 0x5f, 0x52, 0x4f,
	0x55, 0x4e, 0x44, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4f, 0x45,
	0x54, 0x5f, 0x50, 0x52, 0x4f, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44,
	0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x4f, 0x46, 0x10, 0x08, 0x12, 0x14, 0x0a,
	0x10, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x54, 0x58, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59,
	0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x54, 0x58, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43,
	0x41, 0x53, 0x54, 0x45, 0x44, 0x10, 0x0b, 0x32, 0xe3, 0x01, 0x0a, 0x19, 0x53, 0x6d, 0x65, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x29, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x32, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x08, 0x50, 0x6f, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x6f, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x1a, 0x0a, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x04, 0x12, 0x02, 0x56, 0x32, 0x42, 0xe6, 0x01,
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x17, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2,
	0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x12, 0x53, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x56, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x12, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x5c, 0x56, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2,
	0x02, 0x1e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x5c, 0x56, 0x32, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x13, 0x53, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x3a, 0x3a, 0x56, 0x32,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescOnce sync.Once
	file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescData = file_spacemesh_v2alpha1_smeshing_identities_proto_rawDesc
)

func file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescGZIP() []byte {
	file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescOnce.Do(func() {
		file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescData = protoimpl.X.CompressGZIP(file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescData)
	})
	return file_spacemesh_v2alpha1_smeshing_identities_proto_rawDescData
}

var file_spacemesh_v2alpha1_smeshing_identities_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_spacemesh_v2alpha1_smeshing_identities_proto_goTypes = []interface{}{
	(IdentityState)(0),             // 0: spacemesh.v2alpha1.IdentityState
	(*IdentityStatesRequest)(nil),  // 1: spacemesh.v2alpha1.IdentityStatesRequest
	(*IdentityStateInfo)(nil),      // 2: spacemesh.v2alpha1.IdentityStateInfo
	(*Identity)(nil),               // 3: spacemesh.v2alpha1.Identity
	(*IdentityStatesResponse)(nil), // 4: spacemesh.v2alpha1.IdentityStatesResponse
	(*PoetInfoRequest)(nil),        // 5: spacemesh.v2alpha1.PoetInfoRequest
	(*PoetInfoResponse)(nil),       // 6: spacemesh.v2alpha1.PoetInfoResponse
	nil,                            // 7: spacemesh.v2alpha1.IdentityStatesResponse.IdentitiesEntry
	(*timestamppb.Timestamp)(nil),  // 8: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),    // 9: google.protobuf.Duration
}
var file_spacemesh_v2alpha1_smeshing_identities_proto_depIdxs = []int32{
	0, // 0: spacemesh.v2alpha1.IdentityStateInfo.state:type_name -> spacemesh.v2alpha1.IdentityState
	8, // 1: spacemesh.v2alpha1.IdentityStateInfo.time:type_name -> google.protobuf.Timestamp
	2, // 2: spacemesh.v2alpha1.Identity.history:type_name -> spacemesh.v2alpha1.IdentityStateInfo
	7, // 3: spacemesh.v2alpha1.IdentityStatesResponse.identities:type_name -> spacemesh.v2alpha1.IdentityStatesResponse.IdentitiesEntry
	9, // 4: spacemesh.v2alpha1.PoetInfoResponse.phase_shift:type_name -> google.protobuf.Duration
	9, // 5: spacemesh.v2alpha1.PoetInfoResponse.cycle_gap:type_name -> google.protobuf.Duration
	3, // 6: spacemesh.v2alpha1.IdentityStatesResponse.IdentitiesEntry.value:type_name -> spacemesh.v2alpha1.Identity
	1, // 7: spacemesh.v2alpha1.SmeshingIdentitiesService.States:input_type -> spacemesh.v2alpha1.IdentityStatesRequest
	5, // 8: spacemesh.v2alpha1.SmeshingIdentitiesService.PoetInfo:input_type -> spacemesh.v2alpha1.PoetInfoRequest
	4, // 9: spacemesh.v2alpha1.SmeshingIdentitiesService.States:output_type -> spacemesh.v2alpha1.IdentityStatesResponse
	6, // 10: spacemesh.v2alpha1.SmeshingIdentitiesService.PoetInfo:output_type -> spacemesh.v2alpha1.PoetInfoResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_spacemesh_v2alpha1_smeshing_identities_proto_init() }
func file_spacemesh_v2alpha1_smeshing_identities_proto_init() {
	if File_spacemesh_v2alpha1_smeshing_identities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityStatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityStateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityStatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spacemesh_v2alpha1_smeshing_identities_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spacemesh_v2alpha1_smeshing_identities_proto_goTypes,
		DependencyIndexes: file_spacemesh_v2alpha1_smeshing_identities_proto_depIdxs,
		EnumInfos:         file_spacemesh_v2alpha1_smeshing_identities_proto_enumTypes,
		MessageInfos:      file_spacemesh_v2alpha1_smeshing_identities_proto_msgTypes,
	}.Build()
	File_spacemesh_v2alpha1_smeshing_identities_proto = out.File
	file_spacemesh_v2alpha1_smeshing_identities_proto_rawDesc = nil
	file_spacemesh_v2alpha1_smeshing_identities_proto_goTypes = nil
	file_spacemesh_v2alpha1_smeshing_identities_proto_depIdxs = nil
}

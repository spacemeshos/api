// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: spacemesh/v1/types.proto

package spacemeshv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Layer_LayerStatus int32

const (
	Layer_LAYER_STATUS_UNSPECIFIED Layer_LayerStatus = 0 // not yet approved or confirmed
	Layer_LAYER_STATUS_APPROVED    Layer_LayerStatus = 1 // approved by hare
	Layer_LAYER_STATUS_CONFIRMED   Layer_LayerStatus = 2 // confirmed by tortoise
	Layer_LAYER_STATUS_APPLIED     Layer_LayerStatus = 3 // applied in state
)

// Enum value maps for Layer_LayerStatus.
var (
	Layer_LayerStatus_name = map[int32]string{
		0: "LAYER_STATUS_UNSPECIFIED",
		1: "LAYER_STATUS_APPROVED",
		2: "LAYER_STATUS_CONFIRMED",
		3: "LAYER_STATUS_APPLIED",
	}
	Layer_LayerStatus_value = map[string]int32{
		"LAYER_STATUS_UNSPECIFIED": 0,
		"LAYER_STATUS_APPROVED":    1,
		"LAYER_STATUS_CONFIRMED":   2,
		"LAYER_STATUS_APPLIED":     3,
	}
)

func (x Layer_LayerStatus) Enum() *Layer_LayerStatus {
	p := new(Layer_LayerStatus)
	*p = x
	return p
}

func (x Layer_LayerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Layer_LayerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_types_proto_enumTypes[0].Descriptor()
}

func (Layer_LayerStatus) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_types_proto_enumTypes[0]
}

func (x Layer_LayerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Layer_LayerStatus.Descriptor instead.
func (Layer_LayerStatus) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{14, 0}
}

type MalfeasanceProof_MalfeasanceType int32

const (
	MalfeasanceProof_MALFEASANCE_UNSPECIFIED        MalfeasanceProof_MalfeasanceType = 0
	MalfeasanceProof_MALFEASANCE_ATX                MalfeasanceProof_MalfeasanceType = 1
	MalfeasanceProof_MALFEASANCE_BALLOT             MalfeasanceProof_MalfeasanceType = 2
	MalfeasanceProof_MALFEASANCE_HARE               MalfeasanceProof_MalfeasanceType = 3
	MalfeasanceProof_MALFEASANCE_POST_INDEX         MalfeasanceProof_MalfeasanceType = 4
	MalfeasanceProof_MALFEASANCE_INCORRECT_PREV_ATX MalfeasanceProof_MalfeasanceType = 5
)

// Enum value maps for MalfeasanceProof_MalfeasanceType.
var (
	MalfeasanceProof_MalfeasanceType_name = map[int32]string{
		0: "MALFEASANCE_UNSPECIFIED",
		1: "MALFEASANCE_ATX",
		2: "MALFEASANCE_BALLOT",
		3: "MALFEASANCE_HARE",
		4: "MALFEASANCE_POST_INDEX",
		5: "MALFEASANCE_INCORRECT_PREV_ATX",
	}
	MalfeasanceProof_MalfeasanceType_value = map[string]int32{
		"MALFEASANCE_UNSPECIFIED":        0,
		"MALFEASANCE_ATX":                1,
		"MALFEASANCE_BALLOT":             2,
		"MALFEASANCE_HARE":               3,
		"MALFEASANCE_POST_INDEX":         4,
		"MALFEASANCE_INCORRECT_PREV_ATX": 5,
	}
)

func (x MalfeasanceProof_MalfeasanceType) Enum() *MalfeasanceProof_MalfeasanceType {
	p := new(MalfeasanceProof_MalfeasanceType)
	*p = x
	return p
}

func (x MalfeasanceProof_MalfeasanceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MalfeasanceProof_MalfeasanceType) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_types_proto_enumTypes[1].Descriptor()
}

func (MalfeasanceProof_MalfeasanceType) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_types_proto_enumTypes[1]
}

func (x MalfeasanceProof_MalfeasanceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MalfeasanceProof_MalfeasanceType.Descriptor instead.
func (MalfeasanceProof_MalfeasanceType) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{17, 0}
}

type SimpleInt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         uint64                 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleInt) Reset() {
	*x = SimpleInt{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleInt) ProtoMessage() {}

func (x *SimpleInt) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleInt.ProtoReflect.Descriptor instead.
func (*SimpleInt) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *SimpleInt) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SimpleString struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleString) Reset() {
	*x = SimpleString{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleString) ProtoMessage() {}

func (x *SimpleString) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleString.ProtoReflect.Descriptor instead.
func (*SimpleString) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *SimpleString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// A non-negative coin amount, in smidge
type Amount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         uint64                 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Amount) Reset() {
	*x = Amount{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amount) ProtoMessage() {}

func (x *Amount) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amount.ProtoReflect.Descriptor instead.
func (*Amount) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *Amount) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type AccountId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountId) Reset() {
	*x = AccountId{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountId) ProtoMessage() {}

func (x *AccountId) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountId.ProtoReflect.Descriptor instead.
func (*AccountId) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *AccountId) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type TransactionId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionId) Reset() {
	*x = TransactionId{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionId) ProtoMessage() {}

func (x *TransactionId) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionId.ProtoReflect.Descriptor instead.
func (*TransactionId) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionId) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type ActivationId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivationId) Reset() {
	*x = ActivationId{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationId) ProtoMessage() {}

func (x *ActivationId) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationId.ProtoReflect.Descriptor instead.
func (*ActivationId) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{5}
}

func (x *ActivationId) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type SmesherId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SmesherId) Reset() {
	*x = SmesherId{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SmesherId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmesherId) ProtoMessage() {}

func (x *SmesherId) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmesherId.ProtoReflect.Descriptor instead.
func (*SmesherId) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{6}
}

func (x *SmesherId) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

// An Activation "transaction" (ATX)
type Activation struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        *ActivationId          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Layer     *LayerNumber           `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`                          // the layer that this activation is part of
	SmesherId *SmesherId             `protobuf:"bytes,3,opt,name=smesher_id,json=smesherId,proto3" json:"smesher_id,omitempty"` // id of smesher who created the ATX
	Coinbase  *AccountId             `protobuf:"bytes,4,opt,name=coinbase,proto3" json:"coinbase,omitempty"`                    // coinbase account id
	// previous ATX pointed to
	// deprecated to support ATX V2 and merging of ATXs: use previous_atxs instead
	// a merged ATX might reference multiple previous ATXs
	//
	// Deprecated: Marked as deprecated in spacemesh/v1/types.proto.
	PrevAtx       *ActivationId   `protobuf:"bytes,5,opt,name=prev_atx,json=prevAtx,proto3" json:"prev_atx,omitempty"`
	NumUnits      uint32          `protobuf:"varint,6,opt,name=num_units,json=numUnits,proto3" json:"num_units,omitempty"` // number of PoST data commitment units
	Sequence      uint64          `protobuf:"varint,7,opt,name=sequence,proto3" json:"sequence,omitempty"`
	PreviousAtxs  []*ActivationId `protobuf:"bytes,8,rep,name=previous_atxs,json=previousAtxs,proto3" json:"previous_atxs,omitempty"` // previous ATXs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Activation) Reset() {
	*x = Activation{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Activation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activation) ProtoMessage() {}

func (x *Activation) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activation.ProtoReflect.Descriptor instead.
func (*Activation) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{7}
}

func (x *Activation) GetId() *ActivationId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Activation) GetLayer() *LayerNumber {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *Activation) GetSmesherId() *SmesherId {
	if x != nil {
		return x.SmesherId
	}
	return nil
}

func (x *Activation) GetCoinbase() *AccountId {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

// Deprecated: Marked as deprecated in spacemesh/v1/types.proto.
func (x *Activation) GetPrevAtx() *ActivationId {
	if x != nil {
		return x.PrevAtx
	}
	return nil
}

func (x *Activation) GetNumUnits() uint32 {
	if x != nil {
		return x.NumUnits
	}
	return 0
}

func (x *Activation) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Activation) GetPreviousAtxs() []*ActivationId {
	if x != nil {
		return x.PreviousAtxs
	}
	return nil
}

// An immutable Spacemesh transaction.
// do not include mutable data such as tx state or result.
type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Principal     *AccountId             `protobuf:"bytes,2,opt,name=principal,proto3" json:"principal,omitempty"`
	Template      *AccountId             `protobuf:"bytes,3,opt,name=template,proto3" json:"template,omitempty"`
	Method        uint32                 `protobuf:"varint,4,opt,name=method,proto3" json:"method,omitempty"` // this is actually limited by uint8, but no type for that.
	Nonce         *Nonce                 `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Limits        *LayerLimits           `protobuf:"bytes,6,opt,name=limits,proto3" json:"limits,omitempty"`
	MaxGas        uint64                 `protobuf:"varint,7,opt,name=max_gas,json=maxGas,proto3" json:"max_gas,omitempty"`
	GasPrice      uint64                 `protobuf:"varint,8,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	MaxSpend      uint64                 `protobuf:"varint,9,opt,name=max_spend,json=maxSpend,proto3" json:"max_spend,omitempty"`
	Raw           []byte                 `protobuf:"bytes,10,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{8}
}

func (x *Transaction) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Transaction) GetPrincipal() *AccountId {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *Transaction) GetTemplate() *AccountId {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *Transaction) GetMethod() uint32 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *Transaction) GetNonce() *Nonce {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Transaction) GetLimits() *LayerLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *Transaction) GetMaxGas() uint64 {
	if x != nil {
		return x.MaxGas
	}
	return 0
}

func (x *Transaction) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *Transaction) GetMaxSpend() uint64 {
	if x != nil {
		return x.MaxSpend
	}
	return 0
}

func (x *Transaction) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type LayerLimits struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           uint32                 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max           uint32                 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LayerLimits) Reset() {
	*x = LayerLimits{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LayerLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerLimits) ProtoMessage() {}

func (x *LayerLimits) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerLimits.ProtoReflect.Descriptor instead.
func (*LayerLimits) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{9}
}

func (x *LayerLimits) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *LayerLimits) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type Nonce struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Counter       uint64                 `protobuf:"varint,1,opt,name=counter,proto3" json:"counter,omitempty"`
	Bitfield      uint32                 `protobuf:"varint,2,opt,name=bitfield,proto3" json:"bitfield,omitempty"` // this is actually limited by uint8, but no type for that.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Nonce) Reset() {
	*x = Nonce{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nonce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nonce) ProtoMessage() {}

func (x *Nonce) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nonce.ProtoReflect.Descriptor instead.
func (*Nonce) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{10}
}

func (x *Nonce) GetCounter() uint64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *Nonce) GetBitfield() uint32 {
	if x != nil {
		return x.Bitfield
	}
	return 0
}

// Transaction that was added to the mesh.
type MeshTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	LayerId       *LayerNumber           `protobuf:"bytes,2,opt,name=layer_id,json=layerId,proto3" json:"layer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeshTransaction) Reset() {
	*x = MeshTransaction{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshTransaction) ProtoMessage() {}

func (x *MeshTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshTransaction.ProtoReflect.Descriptor instead.
func (*MeshTransaction) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{11}
}

func (x *MeshTransaction) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *MeshTransaction) GetLayerId() *LayerNumber {
	if x != nil {
		return x.LayerId
	}
	return nil
}

type Reward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Layer         *LayerNumber           `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`                                      // layer award was paid in
	Total         *Amount                `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`                                      // total reward paid (sum of tx fee and layer reward)
	LayerReward   *Amount                `protobuf:"bytes,3,opt,name=layer_reward,json=layerReward,proto3" json:"layer_reward,omitempty"`       // tx_fee = total - layer_reward
	LayerComputed *LayerNumber           `protobuf:"bytes,4,opt,name=layer_computed,json=layerComputed,proto3" json:"layer_computed,omitempty"` // layer number of the layer when reward was computed
	Coinbase      *AccountId             `protobuf:"bytes,5,opt,name=coinbase,proto3" json:"coinbase,omitempty"`                                // account awarded this reward
	Smesher       *SmesherId             `protobuf:"bytes,6,opt,name=smesher,proto3" json:"smesher,omitempty"`                                  // id of smesher who earned this reward
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reward) Reset() {
	*x = Reward{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{12}
}

func (x *Reward) GetLayer() *LayerNumber {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *Reward) GetTotal() *Amount {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *Reward) GetLayerReward() *Amount {
	if x != nil {
		return x.LayerReward
	}
	return nil
}

func (x *Reward) GetLayerComputed() *LayerNumber {
	if x != nil {
		return x.LayerComputed
	}
	return nil
}

func (x *Reward) GetCoinbase() *AccountId {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

func (x *Reward) GetSmesher() *SmesherId {
	if x != nil {
		return x.Smesher
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // block hash
	Transactions  []*Transaction         `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`                     // block transactions
	ActivationId  *ActivationId          `protobuf:"bytes,3,opt,name=activation_id,json=activationId,proto3" json:"activation_id,omitempty"` // the smesher's activation that this block refers to
	SmesherId     *SmesherId             `protobuf:"bytes,4,opt,name=smesher_id,json=smesherId,proto3" json:"smesher_id,omitempty"`          // the id of the smesher who submitted this block
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{13}
}

func (x *Block) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Block) GetActivationId() *ActivationId {
	if x != nil {
		return x.ActivationId
	}
	return nil
}

func (x *Block) GetSmesherId() *SmesherId {
	if x != nil {
		return x.SmesherId
	}
	return nil
}

type Layer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        *LayerNumber           `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"` // layer number - not hash - layer content may change
	Status        Layer_LayerStatus      `protobuf:"varint,2,opt,name=status,proto3,enum=spacemesh.v1.Layer_LayerStatus" json:"status,omitempty"`
	Hash          []byte                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`                                          // computer layer hash - do we need this?
	Blocks        []*Block               `protobuf:"bytes,4,rep,name=blocks,proto3" json:"blocks,omitempty"`                                      // layer's blocks
	Activations   []*Activation          `protobuf:"bytes,5,rep,name=activations,proto3" json:"activations,omitempty"`                            // list of layer's activations
	RootStateHash []byte                 `protobuf:"bytes,6,opt,name=root_state_hash,json=rootStateHash,proto3" json:"root_state_hash,omitempty"` // when available - the root state hash of global state in this layer
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Layer) Reset() {
	*x = Layer{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Layer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Layer) ProtoMessage() {}

func (x *Layer) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Layer.ProtoReflect.Descriptor instead.
func (*Layer) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{14}
}

func (x *Layer) GetNumber() *LayerNumber {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *Layer) GetStatus() Layer_LayerStatus {
	if x != nil {
		return x.Status
	}
	return Layer_LAYER_STATUS_UNSPECIFIED
}

func (x *Layer) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Layer) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *Layer) GetActivations() []*Activation {
	if x != nil {
		return x.Activations
	}
	return nil
}

func (x *Layer) GetRootStateHash() []byte {
	if x != nil {
		return x.RootStateHash
	}
	return nil
}

type LayerNumber struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        uint32                 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LayerNumber) Reset() {
	*x = LayerNumber{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LayerNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerNumber) ProtoMessage() {}

func (x *LayerNumber) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerNumber.ProtoReflect.Descriptor instead.
func (*LayerNumber) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{15}
}

func (x *LayerNumber) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type EpochNumber struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        uint32                 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EpochNumber) Reset() {
	*x = EpochNumber{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EpochNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochNumber) ProtoMessage() {}

func (x *EpochNumber) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochNumber.ProtoReflect.Descriptor instead.
func (*EpochNumber) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{16}
}

func (x *EpochNumber) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type MalfeasanceProof struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	SmesherId     *SmesherId                       `protobuf:"bytes,1,opt,name=smesher_id,json=smesherId,proto3" json:"smesher_id,omitempty"`
	Layer         *LayerNumber                     `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`
	Kind          MalfeasanceProof_MalfeasanceType `protobuf:"varint,3,opt,name=kind,proto3,enum=spacemesh.v1.MalfeasanceProof_MalfeasanceType" json:"kind,omitempty"`
	DebugInfo     string                           `protobuf:"bytes,4,opt,name=debug_info,json=debugInfo,proto3" json:"debug_info,omitempty"`
	Proof         []byte                           `protobuf:"bytes,5,opt,name=proof,proto3" json:"proof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MalfeasanceProof) Reset() {
	*x = MalfeasanceProof{}
	mi := &file_spacemesh_v1_types_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MalfeasanceProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MalfeasanceProof) ProtoMessage() {}

func (x *MalfeasanceProof) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_types_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MalfeasanceProof.ProtoReflect.Descriptor instead.
func (*MalfeasanceProof) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_types_proto_rawDescGZIP(), []int{17}
}

func (x *MalfeasanceProof) GetSmesherId() *SmesherId {
	if x != nil {
		return x.SmesherId
	}
	return nil
}

func (x *MalfeasanceProof) GetLayer() *LayerNumber {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *MalfeasanceProof) GetKind() MalfeasanceProof_MalfeasanceType {
	if x != nil {
		return x.Kind
	}
	return MalfeasanceProof_MALFEASANCE_UNSPECIFIED
}

func (x *MalfeasanceProof) GetDebugInfo() string {
	if x != nil {
		return x.DebugInfo
	}
	return ""
}

func (x *MalfeasanceProof) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

var File_spacemesh_v1_types_proto protoreflect.FileDescriptor

const file_spacemesh_v1_types_proto_rawDesc = "" +
	"\n" +
	"\x18spacemesh/v1/types.proto\x12\fspacemesh.v1\"!\n" +
	"\tSimpleInt\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x04R\x05value\"$\n" +
	"\fSimpleString\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x1e\n" +
	"\x06Amount\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x04R\x05value\"%\n" +
	"\tAccountId\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"\x1f\n" +
	"\rTransactionId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\"\x1e\n" +
	"\fActivationId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\"\x1b\n" +
	"\tSmesherId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\"\x8b\x03\n" +
	"\n" +
	"Activation\x12*\n" +
	"\x02id\x18\x01 \x01(\v2\x1a.spacemesh.v1.ActivationIdR\x02id\x12/\n" +
	"\x05layer\x18\x02 \x01(\v2\x19.spacemesh.v1.LayerNumberR\x05layer\x126\n" +
	"\n" +
	"smesher_id\x18\x03 \x01(\v2\x17.spacemesh.v1.SmesherIdR\tsmesherId\x123\n" +
	"\bcoinbase\x18\x04 \x01(\v2\x17.spacemesh.v1.AccountIdR\bcoinbase\x129\n" +
	"\bprev_atx\x18\x05 \x01(\v2\x1a.spacemesh.v1.ActivationIdB\x02\x18\x01R\aprevAtx\x12\x1b\n" +
	"\tnum_units\x18\x06 \x01(\rR\bnumUnits\x12\x1a\n" +
	"\bsequence\x18\a \x01(\x04R\bsequence\x12?\n" +
	"\rprevious_atxs\x18\b \x03(\v2\x1a.spacemesh.v1.ActivationIdR\fpreviousAtxs\"\xe4\x02\n" +
	"\vTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x125\n" +
	"\tprincipal\x18\x02 \x01(\v2\x17.spacemesh.v1.AccountIdR\tprincipal\x123\n" +
	"\btemplate\x18\x03 \x01(\v2\x17.spacemesh.v1.AccountIdR\btemplate\x12\x16\n" +
	"\x06method\x18\x04 \x01(\rR\x06method\x12)\n" +
	"\x05nonce\x18\x05 \x01(\v2\x13.spacemesh.v1.NonceR\x05nonce\x121\n" +
	"\x06limits\x18\x06 \x01(\v2\x19.spacemesh.v1.LayerLimitsR\x06limits\x12\x17\n" +
	"\amax_gas\x18\a \x01(\x04R\x06maxGas\x12\x1b\n" +
	"\tgas_price\x18\b \x01(\x04R\bgasPrice\x12\x1b\n" +
	"\tmax_spend\x18\t \x01(\x04R\bmaxSpend\x12\x10\n" +
	"\x03raw\x18\n" +
	" \x01(\fR\x03raw\"1\n" +
	"\vLayerLimits\x12\x10\n" +
	"\x03min\x18\x01 \x01(\rR\x03min\x12\x10\n" +
	"\x03max\x18\x02 \x01(\rR\x03max\"=\n" +
	"\x05Nonce\x12\x18\n" +
	"\acounter\x18\x01 \x01(\x04R\acounter\x12\x1a\n" +
	"\bbitfield\x18\x02 \x01(\rR\bbitfield\"\x84\x01\n" +
	"\x0fMeshTransaction\x12;\n" +
	"\vtransaction\x18\x01 \x01(\v2\x19.spacemesh.v1.TransactionR\vtransaction\x124\n" +
	"\blayer_id\x18\x02 \x01(\v2\x19.spacemesh.v1.LayerNumberR\alayerId\"\xc8\x02\n" +
	"\x06Reward\x12/\n" +
	"\x05layer\x18\x01 \x01(\v2\x19.spacemesh.v1.LayerNumberR\x05layer\x12*\n" +
	"\x05total\x18\x02 \x01(\v2\x14.spacemesh.v1.AmountR\x05total\x127\n" +
	"\flayer_reward\x18\x03 \x01(\v2\x14.spacemesh.v1.AmountR\vlayerReward\x12@\n" +
	"\x0elayer_computed\x18\x04 \x01(\v2\x19.spacemesh.v1.LayerNumberR\rlayerComputed\x123\n" +
	"\bcoinbase\x18\x05 \x01(\v2\x17.spacemesh.v1.AccountIdR\bcoinbase\x121\n" +
	"\asmesher\x18\x06 \x01(\v2\x17.spacemesh.v1.SmesherIdR\asmesher\"\xcf\x01\n" +
	"\x05Block\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12=\n" +
	"\ftransactions\x18\x02 \x03(\v2\x19.spacemesh.v1.TransactionR\ftransactions\x12?\n" +
	"\ractivation_id\x18\x03 \x01(\v2\x1a.spacemesh.v1.ActivationIdR\factivationId\x126\n" +
	"\n" +
	"smesher_id\x18\x04 \x01(\v2\x17.spacemesh.v1.SmesherIdR\tsmesherId\"\x96\x03\n" +
	"\x05Layer\x121\n" +
	"\x06number\x18\x01 \x01(\v2\x19.spacemesh.v1.LayerNumberR\x06number\x127\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1f.spacemesh.v1.Layer.LayerStatusR\x06status\x12\x12\n" +
	"\x04hash\x18\x03 \x01(\fR\x04hash\x12+\n" +
	"\x06blocks\x18\x04 \x03(\v2\x13.spacemesh.v1.BlockR\x06blocks\x12:\n" +
	"\vactivations\x18\x05 \x03(\v2\x18.spacemesh.v1.ActivationR\vactivations\x12&\n" +
	"\x0froot_state_hash\x18\x06 \x01(\fR\rrootStateHash\"|\n" +
	"\vLayerStatus\x12\x1c\n" +
	"\x18LAYER_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15LAYER_STATUS_APPROVED\x10\x01\x12\x1a\n" +
	"\x16LAYER_STATUS_CONFIRMED\x10\x02\x12\x18\n" +
	"\x14LAYER_STATUS_APPLIED\x10\x03\"%\n" +
	"\vLayerNumber\x12\x16\n" +
	"\x06number\x18\x01 \x01(\rR\x06number\"%\n" +
	"\vEpochNumber\x12\x16\n" +
	"\x06number\x18\x01 \x01(\rR\x06number\"\xa8\x03\n" +
	"\x10MalfeasanceProof\x126\n" +
	"\n" +
	"smesher_id\x18\x01 \x01(\v2\x17.spacemesh.v1.SmesherIdR\tsmesherId\x12/\n" +
	"\x05layer\x18\x02 \x01(\v2\x19.spacemesh.v1.LayerNumberR\x05layer\x12B\n" +
	"\x04kind\x18\x03 \x01(\x0e2..spacemesh.v1.MalfeasanceProof.MalfeasanceTypeR\x04kind\x12\x1d\n" +
	"\n" +
	"debug_info\x18\x04 \x01(\tR\tdebugInfo\x12\x14\n" +
	"\x05proof\x18\x05 \x01(\fR\x05proof\"\xb1\x01\n" +
	"\x0fMalfeasanceType\x12\x1b\n" +
	"\x17MALFEASANCE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fMALFEASANCE_ATX\x10\x01\x12\x16\n" +
	"\x12MALFEASANCE_BALLOT\x10\x02\x12\x14\n" +
	"\x10MALFEASANCE_HARE\x10\x03\x12\x1a\n" +
	"\x16MALFEASANCE_POST_INDEX\x10\x04\x12\"\n" +
	"\x1eMALFEASANCE_INCORRECT_PREV_ATX\x10\x05B\xaf\x01\n" +
	"\x10com.spacemesh.v1B\n" +
	"TypesProtoP\x01Z>github.com/spacemeshos/api/release/go/spacemesh/v1;spacemeshv1\xa2\x02\x03SXX\xaa\x02\fSpacemesh.V1\xca\x02\fSpacemesh\\V1\xe2\x02\x18Spacemesh\\V1\\GPBMetadata\xea\x02\rSpacemesh::V1b\x06proto3"

var (
	file_spacemesh_v1_types_proto_rawDescOnce sync.Once
	file_spacemesh_v1_types_proto_rawDescData []byte
)

func file_spacemesh_v1_types_proto_rawDescGZIP() []byte {
	file_spacemesh_v1_types_proto_rawDescOnce.Do(func() {
		file_spacemesh_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spacemesh_v1_types_proto_rawDesc), len(file_spacemesh_v1_types_proto_rawDesc)))
	})
	return file_spacemesh_v1_types_proto_rawDescData
}

var file_spacemesh_v1_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_spacemesh_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_spacemesh_v1_types_proto_goTypes = []any{
	(Layer_LayerStatus)(0),                // 0: spacemesh.v1.Layer.LayerStatus
	(MalfeasanceProof_MalfeasanceType)(0), // 1: spacemesh.v1.MalfeasanceProof.MalfeasanceType
	(*SimpleInt)(nil),                     // 2: spacemesh.v1.SimpleInt
	(*SimpleString)(nil),                  // 3: spacemesh.v1.SimpleString
	(*Amount)(nil),                        // 4: spacemesh.v1.Amount
	(*AccountId)(nil),                     // 5: spacemesh.v1.AccountId
	(*TransactionId)(nil),                 // 6: spacemesh.v1.TransactionId
	(*ActivationId)(nil),                  // 7: spacemesh.v1.ActivationId
	(*SmesherId)(nil),                     // 8: spacemesh.v1.SmesherId
	(*Activation)(nil),                    // 9: spacemesh.v1.Activation
	(*Transaction)(nil),                   // 10: spacemesh.v1.Transaction
	(*LayerLimits)(nil),                   // 11: spacemesh.v1.LayerLimits
	(*Nonce)(nil),                         // 12: spacemesh.v1.Nonce
	(*MeshTransaction)(nil),               // 13: spacemesh.v1.MeshTransaction
	(*Reward)(nil),                        // 14: spacemesh.v1.Reward
	(*Block)(nil),                         // 15: spacemesh.v1.Block
	(*Layer)(nil),                         // 16: spacemesh.v1.Layer
	(*LayerNumber)(nil),                   // 17: spacemesh.v1.LayerNumber
	(*EpochNumber)(nil),                   // 18: spacemesh.v1.EpochNumber
	(*MalfeasanceProof)(nil),              // 19: spacemesh.v1.MalfeasanceProof
}
var file_spacemesh_v1_types_proto_depIdxs = []int32{
	7,  // 0: spacemesh.v1.Activation.id:type_name -> spacemesh.v1.ActivationId
	17, // 1: spacemesh.v1.Activation.layer:type_name -> spacemesh.v1.LayerNumber
	8,  // 2: spacemesh.v1.Activation.smesher_id:type_name -> spacemesh.v1.SmesherId
	5,  // 3: spacemesh.v1.Activation.coinbase:type_name -> spacemesh.v1.AccountId
	7,  // 4: spacemesh.v1.Activation.prev_atx:type_name -> spacemesh.v1.ActivationId
	7,  // 5: spacemesh.v1.Activation.previous_atxs:type_name -> spacemesh.v1.ActivationId
	5,  // 6: spacemesh.v1.Transaction.principal:type_name -> spacemesh.v1.AccountId
	5,  // 7: spacemesh.v1.Transaction.template:type_name -> spacemesh.v1.AccountId
	12, // 8: spacemesh.v1.Transaction.nonce:type_name -> spacemesh.v1.Nonce
	11, // 9: spacemesh.v1.Transaction.limits:type_name -> spacemesh.v1.LayerLimits
	10, // 10: spacemesh.v1.MeshTransaction.transaction:type_name -> spacemesh.v1.Transaction
	17, // 11: spacemesh.v1.MeshTransaction.layer_id:type_name -> spacemesh.v1.LayerNumber
	17, // 12: spacemesh.v1.Reward.layer:type_name -> spacemesh.v1.LayerNumber
	4,  // 13: spacemesh.v1.Reward.total:type_name -> spacemesh.v1.Amount
	4,  // 14: spacemesh.v1.Reward.layer_reward:type_name -> spacemesh.v1.Amount
	17, // 15: spacemesh.v1.Reward.layer_computed:type_name -> spacemesh.v1.LayerNumber
	5,  // 16: spacemesh.v1.Reward.coinbase:type_name -> spacemesh.v1.AccountId
	8,  // 17: spacemesh.v1.Reward.smesher:type_name -> spacemesh.v1.SmesherId
	10, // 18: spacemesh.v1.Block.transactions:type_name -> spacemesh.v1.Transaction
	7,  // 19: spacemesh.v1.Block.activation_id:type_name -> spacemesh.v1.ActivationId
	8,  // 20: spacemesh.v1.Block.smesher_id:type_name -> spacemesh.v1.SmesherId
	17, // 21: spacemesh.v1.Layer.number:type_name -> spacemesh.v1.LayerNumber
	0,  // 22: spacemesh.v1.Layer.status:type_name -> spacemesh.v1.Layer.LayerStatus
	15, // 23: spacemesh.v1.Layer.blocks:type_name -> spacemesh.v1.Block
	9,  // 24: spacemesh.v1.Layer.activations:type_name -> spacemesh.v1.Activation
	8,  // 25: spacemesh.v1.MalfeasanceProof.smesher_id:type_name -> spacemesh.v1.SmesherId
	17, // 26: spacemesh.v1.MalfeasanceProof.layer:type_name -> spacemesh.v1.LayerNumber
	1,  // 27: spacemesh.v1.MalfeasanceProof.kind:type_name -> spacemesh.v1.MalfeasanceProof.MalfeasanceType
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_spacemesh_v1_types_proto_init() }
func file_spacemesh_v1_types_proto_init() {
	if File_spacemesh_v1_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spacemesh_v1_types_proto_rawDesc), len(file_spacemesh_v1_types_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spacemesh_v1_types_proto_goTypes,
		DependencyIndexes: file_spacemesh_v1_types_proto_depIdxs,
		EnumInfos:         file_spacemesh_v1_types_proto_enumTypes,
		MessageInfos:      file_spacemesh_v1_types_proto_msgTypes,
	}.Build()
	File_spacemesh_v1_types_proto = out.File
	file_spacemesh_v1_types_proto_goTypes = nil
	file_spacemesh_v1_types_proto_depIdxs = nil
}

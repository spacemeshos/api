// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: spacemesh/v1/admin_types.proto

package spacemeshv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// buf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE
type ConnectionInfo_Kind int32

const (
	ConnectionInfo_Unknown       ConnectionInfo_Kind = 0
	ConnectionInfo_Inbound       ConnectionInfo_Kind = 1
	ConnectionInfo_Outbound      ConnectionInfo_Kind = 2
	ConnectionInfo_HPInbound     ConnectionInfo_Kind = 3
	ConnectionInfo_HPOutbound    ConnectionInfo_Kind = 4
	ConnectionInfo_RelayInbound  ConnectionInfo_Kind = 5
	ConnectionInfo_RelayOutbound ConnectionInfo_Kind = 6
)

// Enum value maps for ConnectionInfo_Kind.
var (
	ConnectionInfo_Kind_name = map[int32]string{
		0: "Unknown",
		1: "Inbound",
		2: "Outbound",
		3: "HPInbound",
		4: "HPOutbound",
		5: "RelayInbound",
		6: "RelayOutbound",
	}
	ConnectionInfo_Kind_value = map[string]int32{
		"Unknown":       0,
		"Inbound":       1,
		"Outbound":      2,
		"HPInbound":     3,
		"HPOutbound":    4,
		"RelayInbound":  5,
		"RelayOutbound": 6,
	}
)

func (x ConnectionInfo_Kind) Enum() *ConnectionInfo_Kind {
	p := new(ConnectionInfo_Kind)
	*p = x
	return p
}

func (x ConnectionInfo_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionInfo_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_admin_types_proto_enumTypes[0].Descriptor()
}

func (ConnectionInfo_Kind) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_admin_types_proto_enumTypes[0]
}

func (x ConnectionInfo_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionInfo_Kind.Descriptor instead.
func (ConnectionInfo_Kind) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{25, 0}
}

type CheckpointStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SnapshotLayer uint32                 `protobuf:"varint,1,opt,name=snapshot_layer,json=snapshotLayer,proto3" json:"snapshot_layer,omitempty"`
	NumAtxs       uint32                 `protobuf:"varint,2,opt,name=num_atxs,json=numAtxs,proto3" json:"num_atxs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckpointStreamRequest) Reset() {
	*x = CheckpointStreamRequest{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointStreamRequest) ProtoMessage() {}

func (x *CheckpointStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointStreamRequest.ProtoReflect.Descriptor instead.
func (*CheckpointStreamRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{0}
}

func (x *CheckpointStreamRequest) GetSnapshotLayer() uint32 {
	if x != nil {
		return x.SnapshotLayer
	}
	return 0
}

func (x *CheckpointStreamRequest) GetNumAtxs() uint32 {
	if x != nil {
		return x.NumAtxs
	}
	return 0
}

type CheckpointStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckpointStreamResponse) Reset() {
	*x = CheckpointStreamResponse{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointStreamResponse) ProtoMessage() {}

func (x *CheckpointStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointStreamResponse.ProtoReflect.Descriptor instead.
func (*CheckpointStreamResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{1}
}

func (x *CheckpointStreamResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RecoverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	RestoreLayer  uint32                 `protobuf:"varint,2,opt,name=restore_layer,json=restoreLayer,proto3" json:"restore_layer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecoverRequest) Reset() {
	*x = RecoverRequest{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverRequest) ProtoMessage() {}

func (x *RecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverRequest.ProtoReflect.Descriptor instead.
func (*RecoverRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{2}
}

func (x *RecoverRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *RecoverRequest) GetRestoreLayer() uint32 {
	if x != nil {
		return x.RestoreLayer
	}
	return 0
}

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// time when event occured.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// the reason of the failure may be complex to pinpoint.
	// for the first version we want to highlight that failure occured and defer user to logs.
	Failure bool   `protobuf:"varint,2,opt,name=failure,proto3" json:"failure,omitempty"`
	Help    string `protobuf:"bytes,3,opt,name=help,proto3" json:"help,omitempty"`
	// Types that are valid to be assigned to Details:
	//
	//	*Event_Beacon
	//	*Event_InitStart
	//	*Event_InitComplete
	//	*Event_PostStart
	//	*Event_PostComplete
	//	*Event_PoetWaitRound
	//	*Event_PoetWaitProof
	//	*Event_AtxPublished
	//	*Event_Eligibilities
	//	*Event_Proposal
	//	*Event_InitFailed
	//	*Event_Malfeasance
	//	*Event_PostServiceStarted
	//	*Event_PostServiceStopped
	//	*Event_WaitingForPoetRegistrationWindow
	//	*Event_ProofDownloadedFromPoet
	//	*Event_RegisteredInPoet
	//	*Event_BestProofSelected
	//	*Event_WaitingForPoetRoundEnd
	Details       isEvent_Details `protobuf_oneof:"details"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetFailure() bool {
	if x != nil {
		return x.Failure
	}
	return false
}

func (x *Event) GetHelp() string {
	if x != nil {
		return x.Help
	}
	return ""
}

func (x *Event) GetDetails() isEvent_Details {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Event) GetBeacon() *EventBeacon {
	if x != nil {
		if x, ok := x.Details.(*Event_Beacon); ok {
			return x.Beacon
		}
	}
	return nil
}

func (x *Event) GetInitStart() *EventInitStart {
	if x != nil {
		if x, ok := x.Details.(*Event_InitStart); ok {
			return x.InitStart
		}
	}
	return nil
}

func (x *Event) GetInitComplete() *EventInitComplete {
	if x != nil {
		if x, ok := x.Details.(*Event_InitComplete); ok {
			return x.InitComplete
		}
	}
	return nil
}

func (x *Event) GetPostStart() *EventPostStart {
	if x != nil {
		if x, ok := x.Details.(*Event_PostStart); ok {
			return x.PostStart
		}
	}
	return nil
}

func (x *Event) GetPostComplete() *EventPostComplete {
	if x != nil {
		if x, ok := x.Details.(*Event_PostComplete); ok {
			return x.PostComplete
		}
	}
	return nil
}

func (x *Event) GetPoetWaitRound() *EventPoetWaitRound {
	if x != nil {
		if x, ok := x.Details.(*Event_PoetWaitRound); ok {
			return x.PoetWaitRound
		}
	}
	return nil
}

func (x *Event) GetPoetWaitProof() *EventPoetWaitProof {
	if x != nil {
		if x, ok := x.Details.(*Event_PoetWaitProof); ok {
			return x.PoetWaitProof
		}
	}
	return nil
}

func (x *Event) GetAtxPublished() *EventAtxPubished {
	if x != nil {
		if x, ok := x.Details.(*Event_AtxPublished); ok {
			return x.AtxPublished
		}
	}
	return nil
}

func (x *Event) GetEligibilities() *EventEligibilities {
	if x != nil {
		if x, ok := x.Details.(*Event_Eligibilities); ok {
			return x.Eligibilities
		}
	}
	return nil
}

func (x *Event) GetProposal() *EventProposal {
	if x != nil {
		if x, ok := x.Details.(*Event_Proposal); ok {
			return x.Proposal
		}
	}
	return nil
}

func (x *Event) GetInitFailed() *EventInitFailed {
	if x != nil {
		if x, ok := x.Details.(*Event_InitFailed); ok {
			return x.InitFailed
		}
	}
	return nil
}

func (x *Event) GetMalfeasance() *EventMalfeasance {
	if x != nil {
		if x, ok := x.Details.(*Event_Malfeasance); ok {
			return x.Malfeasance
		}
	}
	return nil
}

func (x *Event) GetPostServiceStarted() *EventPostServiceStarted {
	if x != nil {
		if x, ok := x.Details.(*Event_PostServiceStarted); ok {
			return x.PostServiceStarted
		}
	}
	return nil
}

func (x *Event) GetPostServiceStopped() *EventPostServiceStopped {
	if x != nil {
		if x, ok := x.Details.(*Event_PostServiceStopped); ok {
			return x.PostServiceStopped
		}
	}
	return nil
}

func (x *Event) GetWaitingForPoetRegistrationWindow() *EventWaitingForPoETRegistrationWindow {
	if x != nil {
		if x, ok := x.Details.(*Event_WaitingForPoetRegistrationWindow); ok {
			return x.WaitingForPoetRegistrationWindow
		}
	}
	return nil
}

func (x *Event) GetProofDownloadedFromPoet() *EventProofDownloadedFromPoet {
	if x != nil {
		if x, ok := x.Details.(*Event_ProofDownloadedFromPoet); ok {
			return x.ProofDownloadedFromPoet
		}
	}
	return nil
}

func (x *Event) GetRegisteredInPoet() *EventRegisteredInPoet {
	if x != nil {
		if x, ok := x.Details.(*Event_RegisteredInPoet); ok {
			return x.RegisteredInPoet
		}
	}
	return nil
}

func (x *Event) GetBestProofSelected() *EventBestProofSelected {
	if x != nil {
		if x, ok := x.Details.(*Event_BestProofSelected); ok {
			return x.BestProofSelected
		}
	}
	return nil
}

func (x *Event) GetWaitingForPoetRoundEnd() *EventWaitingForPoETRoundEnd {
	if x != nil {
		if x, ok := x.Details.(*Event_WaitingForPoetRoundEnd); ok {
			return x.WaitingForPoetRoundEnd
		}
	}
	return nil
}

type isEvent_Details interface {
	isEvent_Details()
}

type Event_Beacon struct {
	Beacon *EventBeacon `protobuf:"bytes,4,opt,name=beacon,proto3,oneof"`
}

type Event_InitStart struct {
	InitStart *EventInitStart `protobuf:"bytes,5,opt,name=init_start,json=initStart,proto3,oneof"`
}

type Event_InitComplete struct {
	InitComplete *EventInitComplete `protobuf:"bytes,6,opt,name=init_complete,json=initComplete,proto3,oneof"`
}

type Event_PostStart struct {
	PostStart *EventPostStart `protobuf:"bytes,7,opt,name=post_start,json=postStart,proto3,oneof"`
}

type Event_PostComplete struct {
	PostComplete *EventPostComplete `protobuf:"bytes,8,opt,name=post_complete,json=postComplete,proto3,oneof"`
}

type Event_PoetWaitRound struct {
	PoetWaitRound *EventPoetWaitRound `protobuf:"bytes,9,opt,name=poet_wait_round,json=poetWaitRound,proto3,oneof"`
}

type Event_PoetWaitProof struct {
	PoetWaitProof *EventPoetWaitProof `protobuf:"bytes,10,opt,name=poet_wait_proof,json=poetWaitProof,proto3,oneof"`
}

type Event_AtxPublished struct {
	AtxPublished *EventAtxPubished `protobuf:"bytes,11,opt,name=atx_published,json=atxPublished,proto3,oneof"`
}

type Event_Eligibilities struct {
	Eligibilities *EventEligibilities `protobuf:"bytes,12,opt,name=eligibilities,proto3,oneof"`
}

type Event_Proposal struct {
	Proposal *EventProposal `protobuf:"bytes,13,opt,name=proposal,proto3,oneof"`
}

type Event_InitFailed struct {
	InitFailed *EventInitFailed `protobuf:"bytes,14,opt,name=init_failed,json=initFailed,proto3,oneof"`
}

type Event_Malfeasance struct {
	Malfeasance *EventMalfeasance `protobuf:"bytes,15,opt,name=malfeasance,proto3,oneof"`
}

type Event_PostServiceStarted struct {
	PostServiceStarted *EventPostServiceStarted `protobuf:"bytes,16,opt,name=post_service_started,json=postServiceStarted,proto3,oneof"`
}

type Event_PostServiceStopped struct {
	PostServiceStopped *EventPostServiceStopped `protobuf:"bytes,17,opt,name=post_service_stopped,json=postServiceStopped,proto3,oneof"`
}

type Event_WaitingForPoetRegistrationWindow struct {
	WaitingForPoetRegistrationWindow *EventWaitingForPoETRegistrationWindow `protobuf:"bytes,18,opt,name=waiting_for_poet_registration_window,json=waitingForPoetRegistrationWindow,proto3,oneof"`
}

type Event_ProofDownloadedFromPoet struct {
	ProofDownloadedFromPoet *EventProofDownloadedFromPoet `protobuf:"bytes,19,opt,name=proof_downloaded_from_poet,json=proofDownloadedFromPoet,proto3,oneof"`
}

type Event_RegisteredInPoet struct {
	RegisteredInPoet *EventRegisteredInPoet `protobuf:"bytes,20,opt,name=registered_in_poet,json=registeredInPoet,proto3,oneof"`
}

type Event_BestProofSelected struct {
	BestProofSelected *EventBestProofSelected `protobuf:"bytes,21,opt,name=best_proof_selected,json=bestProofSelected,proto3,oneof"`
}

type Event_WaitingForPoetRoundEnd struct {
	WaitingForPoetRoundEnd *EventWaitingForPoETRoundEnd `protobuf:"bytes,22,opt,name=waiting_for_poet_round_end,json=waitingForPoetRoundEnd,proto3,oneof"`
}

func (*Event_Beacon) isEvent_Details() {}

func (*Event_InitStart) isEvent_Details() {}

func (*Event_InitComplete) isEvent_Details() {}

func (*Event_PostStart) isEvent_Details() {}

func (*Event_PostComplete) isEvent_Details() {}

func (*Event_PoetWaitRound) isEvent_Details() {}

func (*Event_PoetWaitProof) isEvent_Details() {}

func (*Event_AtxPublished) isEvent_Details() {}

func (*Event_Eligibilities) isEvent_Details() {}

func (*Event_Proposal) isEvent_Details() {}

func (*Event_InitFailed) isEvent_Details() {}

func (*Event_Malfeasance) isEvent_Details() {}

func (*Event_PostServiceStarted) isEvent_Details() {}

func (*Event_PostServiceStopped) isEvent_Details() {}

func (*Event_WaitingForPoetRegistrationWindow) isEvent_Details() {}

func (*Event_ProofDownloadedFromPoet) isEvent_Details() {}

func (*Event_RegisteredInPoet) isEvent_Details() {}

func (*Event_BestProofSelected) isEvent_Details() {}

func (*Event_WaitingForPoetRoundEnd) isEvent_Details() {}

type EventBeacon struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epoch         uint32                 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Beacon        []byte                 `protobuf:"bytes,2,opt,name=beacon,proto3" json:"beacon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventBeacon) Reset() {
	*x = EventBeacon{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBeacon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBeacon) ProtoMessage() {}

func (x *EventBeacon) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBeacon.ProtoReflect.Descriptor instead.
func (*EventBeacon) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{4}
}

func (x *EventBeacon) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *EventBeacon) GetBeacon() []byte {
	if x != nil {
		return x.Beacon
	}
	return nil
}

type EventInitStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Smesher       []byte                 `protobuf:"bytes,1,opt,name=smesher,proto3" json:"smesher,omitempty"`
	Commitment    []byte                 `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventInitStart) Reset() {
	*x = EventInitStart{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventInitStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInitStart) ProtoMessage() {}

func (x *EventInitStart) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInitStart.ProtoReflect.Descriptor instead.
func (*EventInitStart) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{5}
}

func (x *EventInitStart) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

func (x *EventInitStart) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

type EventInitFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Smesher       []byte                 `protobuf:"bytes,1,opt,name=smesher,proto3" json:"smesher,omitempty"`
	Commitment    []byte                 `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventInitFailed) Reset() {
	*x = EventInitFailed{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventInitFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInitFailed) ProtoMessage() {}

func (x *EventInitFailed) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInitFailed.ProtoReflect.Descriptor instead.
func (*EventInitFailed) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{6}
}

func (x *EventInitFailed) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

func (x *EventInitFailed) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *EventInitFailed) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type EventInitComplete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Smesher       []byte                 `protobuf:"bytes,1,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventInitComplete) Reset() {
	*x = EventInitComplete{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventInitComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInitComplete) ProtoMessage() {}

func (x *EventInitComplete) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInitComplete.ProtoReflect.Descriptor instead.
func (*EventInitComplete) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{7}
}

func (x *EventInitComplete) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

type EventPostServiceStarted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPostServiceStarted) Reset() {
	*x = EventPostServiceStarted{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPostServiceStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPostServiceStarted) ProtoMessage() {}

func (x *EventPostServiceStarted) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPostServiceStarted.ProtoReflect.Descriptor instead.
func (*EventPostServiceStarted) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{8}
}

type EventPostServiceStopped struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPostServiceStopped) Reset() {
	*x = EventPostServiceStopped{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPostServiceStopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPostServiceStopped) ProtoMessage() {}

func (x *EventPostServiceStopped) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPostServiceStopped.ProtoReflect.Descriptor instead.
func (*EventPostServiceStopped) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{9}
}

type EventPostStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Challenge     []byte                 `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,2,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPostStart) Reset() {
	*x = EventPostStart{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPostStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPostStart) ProtoMessage() {}

func (x *EventPostStart) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPostStart.ProtoReflect.Descriptor instead.
func (*EventPostStart) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{10}
}

func (x *EventPostStart) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *EventPostStart) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

type EventPostComplete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Challenge     []byte                 `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,2,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPostComplete) Reset() {
	*x = EventPostComplete{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPostComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPostComplete) ProtoMessage() {}

func (x *EventPostComplete) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPostComplete.ProtoReflect.Descriptor instead.
func (*EventPostComplete) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{11}
}

func (x *EventPostComplete) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *EventPostComplete) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

// Deprecated. Will be removed soon. Use WaitingForPoETRegistrationWindow instead.
//
// Deprecated: Marked as deprecated in spacemesh/v1/admin_types.proto.
type EventPoetWaitRound struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       uint32                 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Publish       uint32                 `protobuf:"varint,2,opt,name=publish,proto3" json:"publish,omitempty"`
	Wait          *durationpb.Duration   `protobuf:"bytes,3,opt,name=wait,proto3" json:"wait,omitempty"`
	Until         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=until,proto3" json:"until,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,5,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPoetWaitRound) Reset() {
	*x = EventPoetWaitRound{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPoetWaitRound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPoetWaitRound) ProtoMessage() {}

func (x *EventPoetWaitRound) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPoetWaitRound.ProtoReflect.Descriptor instead.
func (*EventPoetWaitRound) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{12}
}

func (x *EventPoetWaitRound) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *EventPoetWaitRound) GetPublish() uint32 {
	if x != nil {
		return x.Publish
	}
	return 0
}

func (x *EventPoetWaitRound) GetWait() *durationpb.Duration {
	if x != nil {
		return x.Wait
	}
	return nil
}

func (x *EventPoetWaitRound) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

func (x *EventPoetWaitRound) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

type EventWaitingForPoETRegistrationWindow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       uint32                 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Publish       uint32                 `protobuf:"varint,2,opt,name=publish,proto3" json:"publish,omitempty"`
	RoundEnd      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=round_end,json=roundEnd,proto3" json:"round_end,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,4,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventWaitingForPoETRegistrationWindow) Reset() {
	*x = EventWaitingForPoETRegistrationWindow{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventWaitingForPoETRegistrationWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventWaitingForPoETRegistrationWindow) ProtoMessage() {}

func (x *EventWaitingForPoETRegistrationWindow) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventWaitingForPoETRegistrationWindow.ProtoReflect.Descriptor instead.
func (*EventWaitingForPoETRegistrationWindow) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{13}
}

func (x *EventWaitingForPoETRegistrationWindow) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *EventWaitingForPoETRegistrationWindow) GetPublish() uint32 {
	if x != nil {
		return x.Publish
	}
	return 0
}

func (x *EventWaitingForPoETRegistrationWindow) GetRoundEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.RoundEnd
	}
	return nil
}

func (x *EventWaitingForPoETRegistrationWindow) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

// Deprecated. Will be removed soon. Use EventWaitingForPoETRoundEnd instead.
//
// Deprecated: Marked as deprecated in spacemesh/v1/admin_types.proto.
type EventPoetWaitProof struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Publish       uint32                 `protobuf:"varint,1,opt,name=publish,proto3" json:"publish,omitempty"`
	Target        uint32                 `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	Wait          *durationpb.Duration   `protobuf:"bytes,3,opt,name=wait,proto3" json:"wait,omitempty"`
	Until         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=until,proto3" json:"until,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,5,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPoetWaitProof) Reset() {
	*x = EventPoetWaitProof{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPoetWaitProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPoetWaitProof) ProtoMessage() {}

func (x *EventPoetWaitProof) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPoetWaitProof.ProtoReflect.Descriptor instead.
func (*EventPoetWaitProof) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{14}
}

func (x *EventPoetWaitProof) GetPublish() uint32 {
	if x != nil {
		return x.Publish
	}
	return 0
}

func (x *EventPoetWaitProof) GetTarget() uint32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *EventPoetWaitProof) GetWait() *durationpb.Duration {
	if x != nil {
		return x.Wait
	}
	return nil
}

func (x *EventPoetWaitProof) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

func (x *EventPoetWaitProof) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

type EventWaitingForPoETRoundEnd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Publish       uint32                 `protobuf:"varint,1,opt,name=publish,proto3" json:"publish,omitempty"`
	Target        uint32                 `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	RoundEnd      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=round_end,json=roundEnd,proto3" json:"round_end,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,4,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventWaitingForPoETRoundEnd) Reset() {
	*x = EventWaitingForPoETRoundEnd{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventWaitingForPoETRoundEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventWaitingForPoETRoundEnd) ProtoMessage() {}

func (x *EventWaitingForPoETRoundEnd) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventWaitingForPoETRoundEnd.ProtoReflect.Descriptor instead.
func (*EventWaitingForPoETRoundEnd) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{15}
}

func (x *EventWaitingForPoETRoundEnd) GetPublish() uint32 {
	if x != nil {
		return x.Publish
	}
	return 0
}

func (x *EventWaitingForPoETRoundEnd) GetTarget() uint32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *EventWaitingForPoETRoundEnd) GetRoundEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.RoundEnd
	}
	return nil
}

func (x *EventWaitingForPoETRoundEnd) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

type EventAtxPubished struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       uint32                 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Target        uint32                 `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	Id            []byte                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Wait          *durationpb.Duration   `protobuf:"bytes,4,opt,name=wait,proto3" json:"wait,omitempty"`
	Until         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=until,proto3" json:"until,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,6,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventAtxPubished) Reset() {
	*x = EventAtxPubished{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventAtxPubished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAtxPubished) ProtoMessage() {}

func (x *EventAtxPubished) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAtxPubished.ProtoReflect.Descriptor instead.
func (*EventAtxPubished) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{16}
}

func (x *EventAtxPubished) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *EventAtxPubished) GetTarget() uint32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *EventAtxPubished) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *EventAtxPubished) GetWait() *durationpb.Duration {
	if x != nil {
		return x.Wait
	}
	return nil
}

func (x *EventAtxPubished) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

func (x *EventAtxPubished) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

type EventEligibilities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epoch         uint32                 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Beacon        []byte                 `protobuf:"bytes,2,opt,name=beacon,proto3" json:"beacon,omitempty"`
	Atx           []byte                 `protobuf:"bytes,3,opt,name=atx,proto3" json:"atx,omitempty"`
	ActiveSetSize uint32                 `protobuf:"varint,4,opt,name=active_set_size,json=activeSetSize,proto3" json:"active_set_size,omitempty"`
	Eligibilities []*ProposalEligibility `protobuf:"bytes,5,rep,name=eligibilities,proto3" json:"eligibilities,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,6,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventEligibilities) Reset() {
	*x = EventEligibilities{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventEligibilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEligibilities) ProtoMessage() {}

func (x *EventEligibilities) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEligibilities.ProtoReflect.Descriptor instead.
func (*EventEligibilities) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{17}
}

func (x *EventEligibilities) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *EventEligibilities) GetBeacon() []byte {
	if x != nil {
		return x.Beacon
	}
	return nil
}

func (x *EventEligibilities) GetAtx() []byte {
	if x != nil {
		return x.Atx
	}
	return nil
}

func (x *EventEligibilities) GetActiveSetSize() uint32 {
	if x != nil {
		return x.ActiveSetSize
	}
	return 0
}

func (x *EventEligibilities) GetEligibilities() []*ProposalEligibility {
	if x != nil {
		return x.Eligibilities
	}
	return nil
}

func (x *EventEligibilities) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

type ProposalEligibility struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Layer         uint32                 `protobuf:"varint,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Count         uint32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposalEligibility) Reset() {
	*x = ProposalEligibility{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposalEligibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalEligibility) ProtoMessage() {}

func (x *ProposalEligibility) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalEligibility.ProtoReflect.Descriptor instead.
func (*ProposalEligibility) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{18}
}

func (x *ProposalEligibility) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *ProposalEligibility) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Published proposal. Rewards will be received, once proposal is included into the block.
type EventProposal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Layer         uint32                 `protobuf:"varint,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Proposal      []byte                 `protobuf:"bytes,2,opt,name=proposal,proto3" json:"proposal,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,3,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventProposal) Reset() {
	*x = EventProposal{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProposal) ProtoMessage() {}

func (x *EventProposal) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventProposal.ProtoReflect.Descriptor instead.
func (*EventProposal) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{19}
}

func (x *EventProposal) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *EventProposal) GetProposal() []byte {
	if x != nil {
		return x.Proposal
	}
	return nil
}

func (x *EventProposal) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

type EventMalfeasance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Proof         *MalfeasanceProof      `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventMalfeasance) Reset() {
	*x = EventMalfeasance{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventMalfeasance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMalfeasance) ProtoMessage() {}

func (x *EventMalfeasance) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMalfeasance.ProtoReflect.Descriptor instead.
func (*EventMalfeasance) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{20}
}

func (x *EventMalfeasance) GetProof() *MalfeasanceProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type EventStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventStreamRequest) Reset() {
	*x = EventStreamRequest{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamRequest) ProtoMessage() {}

func (x *EventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStreamRequest.ProtoReflect.Descriptor instead.
func (*EventStreamRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{21}
}

type EventRegisteredInPoet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,2,opt,name=smesher,proto3" json:"smesher,omitempty"`
	RoundId       string                 `protobuf:"bytes,3,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRegisteredInPoet) Reset() {
	*x = EventRegisteredInPoet{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRegisteredInPoet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRegisteredInPoet) ProtoMessage() {}

func (x *EventRegisteredInPoet) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRegisteredInPoet.ProtoReflect.Descriptor instead.
func (*EventRegisteredInPoet) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{22}
}

func (x *EventRegisteredInPoet) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EventRegisteredInPoet) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

func (x *EventRegisteredInPoet) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

// ticks is proof leaves / tickSize
type EventProofDownloadedFromPoet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	RoundId       string                 `protobuf:"bytes,2,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	Ticks         uint64                 `protobuf:"varint,3,opt,name=ticks,proto3" json:"ticks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventProofDownloadedFromPoet) Reset() {
	*x = EventProofDownloadedFromPoet{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventProofDownloadedFromPoet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProofDownloadedFromPoet) ProtoMessage() {}

func (x *EventProofDownloadedFromPoet) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventProofDownloadedFromPoet.ProtoReflect.Descriptor instead.
func (*EventProofDownloadedFromPoet) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{23}
}

func (x *EventProofDownloadedFromPoet) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EventProofDownloadedFromPoet) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *EventProofDownloadedFromPoet) GetTicks() uint64 {
	if x != nil {
		return x.Ticks
	}
	return 0
}

type EventBestProofSelected struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	RoundId       string                 `protobuf:"bytes,2,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	Ticks         uint64                 `protobuf:"varint,3,opt,name=ticks,proto3" json:"ticks,omitempty"`
	Smesher       []byte                 `protobuf:"bytes,4,opt,name=smesher,proto3" json:"smesher,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventBestProofSelected) Reset() {
	*x = EventBestProofSelected{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBestProofSelected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBestProofSelected) ProtoMessage() {}

func (x *EventBestProofSelected) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBestProofSelected.ProtoReflect.Descriptor instead.
func (*EventBestProofSelected) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{24}
}

func (x *EventBestProofSelected) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EventBestProofSelected) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *EventBestProofSelected) GetTicks() uint64 {
	if x != nil {
		return x.Ticks
	}
	return 0
}

func (x *EventBestProofSelected) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

type ConnectionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Uptime        *durationpb.Duration   `protobuf:"bytes,2,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Outbound      bool                   `protobuf:"varint,3,opt,name=outbound,proto3" json:"outbound,omitempty"`
	Kind          ConnectionInfo_Kind    `protobuf:"varint,4,opt,name=kind,proto3,enum=spacemesh.v1.ConnectionInfo_Kind" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionInfo) Reset() {
	*x = ConnectionInfo{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionInfo) ProtoMessage() {}

func (x *ConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionInfo.ProtoReflect.Descriptor instead.
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{25}
}

func (x *ConnectionInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ConnectionInfo) GetUptime() *durationpb.Duration {
	if x != nil {
		return x.Uptime
	}
	return nil
}

func (x *ConnectionInfo) GetOutbound() bool {
	if x != nil {
		return x.Outbound
	}
	return false
}

func (x *ConnectionInfo) GetKind() ConnectionInfo_Kind {
	if x != nil {
		return x.Kind
	}
	return ConnectionInfo_Unknown
}

type PeerRequestStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SuccessCount  uint64                 `protobuf:"varint,1,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	FailureCount  uint64                 `protobuf:"varint,2,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	Latency       *durationpb.Duration   `protobuf:"bytes,3,opt,name=latency,proto3,oneof" json:"latency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerRequestStats) Reset() {
	*x = PeerRequestStats{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerRequestStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerRequestStats) ProtoMessage() {}

func (x *PeerRequestStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerRequestStats.ProtoReflect.Descriptor instead.
func (*PeerRequestStats) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{26}
}

func (x *PeerRequestStats) GetSuccessCount() uint64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *PeerRequestStats) GetFailureCount() uint64 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

func (x *PeerRequestStats) GetLatency() *durationpb.Duration {
	if x != nil {
		return x.Latency
	}
	return nil
}

type PeerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Connections   []*ConnectionInfo      `protobuf:"bytes,2,rep,name=connections,proto3" json:"connections,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	ClientStats   *PeerRequestStats      `protobuf:"bytes,5,opt,name=client_stats,json=clientStats,proto3,oneof" json:"client_stats,omitempty"`
	ServerStats   *PeerRequestStats      `protobuf:"bytes,6,opt,name=server_stats,json=serverStats,proto3,oneof" json:"server_stats,omitempty"`
	BytesSent     uint64                 `protobuf:"varint,7,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived uint64                 `protobuf:"varint,8,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	SendRate      []uint64               `protobuf:"varint,9,rep,packed,name=send_rate,json=sendRate,proto3" json:"send_rate,omitempty"`
	RecvRate      []uint64               `protobuf:"varint,10,rep,packed,name=recv_rate,json=recvRate,proto3" json:"recv_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{27}
}

func (x *PeerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PeerInfo) GetConnections() []*ConnectionInfo {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *PeerInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PeerInfo) GetClientStats() *PeerRequestStats {
	if x != nil {
		return x.ClientStats
	}
	return nil
}

func (x *PeerInfo) GetServerStats() *PeerRequestStats {
	if x != nil {
		return x.ServerStats
	}
	return nil
}

func (x *PeerInfo) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *PeerInfo) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *PeerInfo) GetSendRate() []uint64 {
	if x != nil {
		return x.SendRate
	}
	return nil
}

func (x *PeerInfo) GetRecvRate() []uint64 {
	if x != nil {
		return x.RecvRate
	}
	return nil
}

var File_spacemesh_v1_admin_types_proto protoreflect.FileDescriptor

const file_spacemesh_v1_admin_types_proto_rawDesc = "" +
	"\n" +
	"\x1espacemesh/v1/admin_types.proto\x12\fspacemesh.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x18spacemesh/v1/types.proto\"[\n" +
	"\x17CheckpointStreamRequest\x12%\n" +
	"\x0esnapshot_layer\x18\x01 \x01(\rR\rsnapshotLayer\x12\x19\n" +
	"\bnum_atxs\x18\x02 \x01(\rR\anumAtxs\".\n" +
	"\x18CheckpointStreamResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"G\n" +
	"\x0eRecoverRequest\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\x12#\n" +
	"\rrestore_layer\x18\x02 \x01(\rR\frestoreLayer\"\xe6\f\n" +
	"\x05Event\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\afailure\x18\x02 \x01(\bR\afailure\x12\x12\n" +
	"\x04help\x18\x03 \x01(\tR\x04help\x123\n" +
	"\x06beacon\x18\x04 \x01(\v2\x19.spacemesh.v1.EventBeaconH\x00R\x06beacon\x12=\n" +
	"\n" +
	"init_start\x18\x05 \x01(\v2\x1c.spacemesh.v1.EventInitStartH\x00R\tinitStart\x12F\n" +
	"\rinit_complete\x18\x06 \x01(\v2\x1f.spacemesh.v1.EventInitCompleteH\x00R\finitComplete\x12=\n" +
	"\n" +
	"post_start\x18\a \x01(\v2\x1c.spacemesh.v1.EventPostStartH\x00R\tpostStart\x12F\n" +
	"\rpost_complete\x18\b \x01(\v2\x1f.spacemesh.v1.EventPostCompleteH\x00R\fpostComplete\x12J\n" +
	"\x0fpoet_wait_round\x18\t \x01(\v2 .spacemesh.v1.EventPoetWaitRoundH\x00R\rpoetWaitRound\x12J\n" +
	"\x0fpoet_wait_proof\x18\n" +
	" \x01(\v2 .spacemesh.v1.EventPoetWaitProofH\x00R\rpoetWaitProof\x12E\n" +
	"\ratx_published\x18\v \x01(\v2\x1e.spacemesh.v1.EventAtxPubishedH\x00R\fatxPublished\x12H\n" +
	"\religibilities\x18\f \x01(\v2 .spacemesh.v1.EventEligibilitiesH\x00R\religibilities\x129\n" +
	"\bproposal\x18\r \x01(\v2\x1b.spacemesh.v1.EventProposalH\x00R\bproposal\x12@\n" +
	"\vinit_failed\x18\x0e \x01(\v2\x1d.spacemesh.v1.EventInitFailedH\x00R\n" +
	"initFailed\x12B\n" +
	"\vmalfeasance\x18\x0f \x01(\v2\x1e.spacemesh.v1.EventMalfeasanceH\x00R\vmalfeasance\x12Y\n" +
	"\x14post_service_started\x18\x10 \x01(\v2%.spacemesh.v1.EventPostServiceStartedH\x00R\x12postServiceStarted\x12Y\n" +
	"\x14post_service_stopped\x18\x11 \x01(\v2%.spacemesh.v1.EventPostServiceStoppedH\x00R\x12postServiceStopped\x12\x85\x01\n" +
	"$waiting_for_poet_registration_window\x18\x12 \x01(\v23.spacemesh.v1.EventWaitingForPoETRegistrationWindowH\x00R waitingForPoetRegistrationWindow\x12i\n" +
	"\x1aproof_downloaded_from_poet\x18\x13 \x01(\v2*.spacemesh.v1.EventProofDownloadedFromPoetH\x00R\x17proofDownloadedFromPoet\x12S\n" +
	"\x12registered_in_poet\x18\x14 \x01(\v2#.spacemesh.v1.EventRegisteredInPoetH\x00R\x10registeredInPoet\x12V\n" +
	"\x13best_proof_selected\x18\x15 \x01(\v2$.spacemesh.v1.EventBestProofSelectedH\x00R\x11bestProofSelected\x12g\n" +
	"\x1awaiting_for_poet_round_end\x18\x16 \x01(\v2).spacemesh.v1.EventWaitingForPoETRoundEndH\x00R\x16waitingForPoetRoundEndB\t\n" +
	"\adetails\";\n" +
	"\vEventBeacon\x12\x14\n" +
	"\x05epoch\x18\x01 \x01(\rR\x05epoch\x12\x16\n" +
	"\x06beacon\x18\x02 \x01(\fR\x06beacon\"J\n" +
	"\x0eEventInitStart\x12\x18\n" +
	"\asmesher\x18\x01 \x01(\fR\asmesher\x12\x1e\n" +
	"\n" +
	"commitment\x18\x02 \x01(\fR\n" +
	"commitment\"a\n" +
	"\x0fEventInitFailed\x12\x18\n" +
	"\asmesher\x18\x01 \x01(\fR\asmesher\x12\x1e\n" +
	"\n" +
	"commitment\x18\x02 \x01(\fR\n" +
	"commitment\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"-\n" +
	"\x11EventInitComplete\x12\x18\n" +
	"\asmesher\x18\x01 \x01(\fR\asmesher\"\x19\n" +
	"\x17EventPostServiceStarted\"\x19\n" +
	"\x17EventPostServiceStopped\"H\n" +
	"\x0eEventPostStart\x12\x1c\n" +
	"\tchallenge\x18\x01 \x01(\fR\tchallenge\x12\x18\n" +
	"\asmesher\x18\x02 \x01(\fR\asmesher\"K\n" +
	"\x11EventPostComplete\x12\x1c\n" +
	"\tchallenge\x18\x01 \x01(\fR\tchallenge\x12\x18\n" +
	"\asmesher\x18\x02 \x01(\fR\asmesher\"\xc7\x01\n" +
	"\x12EventPoetWaitRound\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\rR\acurrent\x12\x18\n" +
	"\apublish\x18\x02 \x01(\rR\apublish\x12-\n" +
	"\x04wait\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x04wait\x120\n" +
	"\x05until\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05until\x12\x18\n" +
	"\asmesher\x18\x05 \x01(\fR\asmesher:\x02\x18\x01\"\xae\x01\n" +
	"%EventWaitingForPoETRegistrationWindow\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\rR\acurrent\x12\x18\n" +
	"\apublish\x18\x02 \x01(\rR\apublish\x127\n" +
	"\tround_end\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\broundEnd\x12\x18\n" +
	"\asmesher\x18\x04 \x01(\fR\asmesher\"\xc5\x01\n" +
	"\x12EventPoetWaitProof\x12\x18\n" +
	"\apublish\x18\x01 \x01(\rR\apublish\x12\x16\n" +
	"\x06target\x18\x02 \x01(\rR\x06target\x12-\n" +
	"\x04wait\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x04wait\x120\n" +
	"\x05until\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05until\x12\x18\n" +
	"\asmesher\x18\x05 \x01(\fR\asmesher:\x02\x18\x01\"\xa2\x01\n" +
	"\x1bEventWaitingForPoETRoundEnd\x12\x18\n" +
	"\apublish\x18\x01 \x01(\rR\apublish\x12\x16\n" +
	"\x06target\x18\x02 \x01(\rR\x06target\x127\n" +
	"\tround_end\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\broundEnd\x12\x18\n" +
	"\asmesher\x18\x04 \x01(\fR\asmesher\"\xcf\x01\n" +
	"\x10EventAtxPubished\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\rR\acurrent\x12\x16\n" +
	"\x06target\x18\x02 \x01(\rR\x06target\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\fR\x02id\x12-\n" +
	"\x04wait\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x04wait\x120\n" +
	"\x05until\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x05until\x12\x18\n" +
	"\asmesher\x18\x06 \x01(\fR\asmesher\"\xdf\x01\n" +
	"\x12EventEligibilities\x12\x14\n" +
	"\x05epoch\x18\x01 \x01(\rR\x05epoch\x12\x16\n" +
	"\x06beacon\x18\x02 \x01(\fR\x06beacon\x12\x10\n" +
	"\x03atx\x18\x03 \x01(\fR\x03atx\x12&\n" +
	"\x0factive_set_size\x18\x04 \x01(\rR\ractiveSetSize\x12G\n" +
	"\religibilities\x18\x05 \x03(\v2!.spacemesh.v1.ProposalEligibilityR\religibilities\x12\x18\n" +
	"\asmesher\x18\x06 \x01(\fR\asmesher\"A\n" +
	"\x13ProposalEligibility\x12\x14\n" +
	"\x05layer\x18\x01 \x01(\rR\x05layer\x12\x14\n" +
	"\x05count\x18\x02 \x01(\rR\x05count\"[\n" +
	"\rEventProposal\x12\x14\n" +
	"\x05layer\x18\x01 \x01(\rR\x05layer\x12\x1a\n" +
	"\bproposal\x18\x02 \x01(\fR\bproposal\x12\x18\n" +
	"\asmesher\x18\x03 \x01(\fR\asmesher\"H\n" +
	"\x10EventMalfeasance\x124\n" +
	"\x05proof\x18\x01 \x01(\v2\x1e.spacemesh.v1.MalfeasanceProofR\x05proof\"\x14\n" +
	"\x12EventStreamRequest\"^\n" +
	"\x15EventRegisteredInPoet\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x18\n" +
	"\asmesher\x18\x02 \x01(\fR\asmesher\x12\x19\n" +
	"\bround_id\x18\x03 \x01(\tR\aroundId\"a\n" +
	"\x1cEventProofDownloadedFromPoet\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x19\n" +
	"\bround_id\x18\x02 \x01(\tR\aroundId\x12\x14\n" +
	"\x05ticks\x18\x03 \x01(\x04R\x05ticks\"u\n" +
	"\x16EventBestProofSelected\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x19\n" +
	"\bround_id\x18\x02 \x01(\tR\aroundId\x12\x14\n" +
	"\x05ticks\x18\x03 \x01(\x04R\x05ticks\x12\x18\n" +
	"\asmesher\x18\x04 \x01(\fR\asmesher\"\xa4\x02\n" +
	"\x0eConnectionInfo\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x121\n" +
	"\x06uptime\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x06uptime\x12\x1a\n" +
	"\boutbound\x18\x03 \x01(\bR\boutbound\x125\n" +
	"\x04kind\x18\x04 \x01(\x0e2!.spacemesh.v1.ConnectionInfo.KindR\x04kind\"r\n" +
	"\x04Kind\x12\v\n" +
	"\aUnknown\x10\x00\x12\v\n" +
	"\aInbound\x10\x01\x12\f\n" +
	"\bOutbound\x10\x02\x12\r\n" +
	"\tHPInbound\x10\x03\x12\x0e\n" +
	"\n" +
	"HPOutbound\x10\x04\x12\x10\n" +
	"\fRelayInbound\x10\x05\x12\x11\n" +
	"\rRelayOutbound\x10\x06\"\xa2\x01\n" +
	"\x10PeerRequestStats\x12#\n" +
	"\rsuccess_count\x18\x01 \x01(\x04R\fsuccessCount\x12#\n" +
	"\rfailure_count\x18\x02 \x01(\x04R\ffailureCount\x128\n" +
	"\alatency\x18\x03 \x01(\v2\x19.google.protobuf.DurationH\x00R\alatency\x88\x01\x01B\n" +
	"\n" +
	"\b_latency\"\xa0\x03\n" +
	"\bPeerInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12>\n" +
	"\vconnections\x18\x02 \x03(\v2\x1c.spacemesh.v1.ConnectionInfoR\vconnections\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12F\n" +
	"\fclient_stats\x18\x05 \x01(\v2\x1e.spacemesh.v1.PeerRequestStatsH\x00R\vclientStats\x88\x01\x01\x12F\n" +
	"\fserver_stats\x18\x06 \x01(\v2\x1e.spacemesh.v1.PeerRequestStatsH\x01R\vserverStats\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\a \x01(\x04R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\b \x01(\x04R\rbytesReceived\x12\x1b\n" +
	"\tsend_rate\x18\t \x03(\x04R\bsendRate\x12\x1b\n" +
	"\trecv_rate\x18\n" +
	" \x03(\x04R\brecvRateB\x0f\n" +
	"\r_client_statsB\x0f\n" +
	"\r_server_statsB\xb4\x01\n" +
	"\x10com.spacemesh.v1B\x0fAdminTypesProtoP\x01Z>github.com/spacemeshos/api/release/go/spacemesh/v1;spacemeshv1\xa2\x02\x03SXX\xaa\x02\fSpacemesh.V1\xca\x02\fSpacemesh\\V1\xe2\x02\x18Spacemesh\\V1\\GPBMetadata\xea\x02\rSpacemesh::V1b\x06proto3"

var (
	file_spacemesh_v1_admin_types_proto_rawDescOnce sync.Once
	file_spacemesh_v1_admin_types_proto_rawDescData []byte
)

func file_spacemesh_v1_admin_types_proto_rawDescGZIP() []byte {
	file_spacemesh_v1_admin_types_proto_rawDescOnce.Do(func() {
		file_spacemesh_v1_admin_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spacemesh_v1_admin_types_proto_rawDesc), len(file_spacemesh_v1_admin_types_proto_rawDesc)))
	})
	return file_spacemesh_v1_admin_types_proto_rawDescData
}

var file_spacemesh_v1_admin_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spacemesh_v1_admin_types_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_spacemesh_v1_admin_types_proto_goTypes = []any{
	(ConnectionInfo_Kind)(0),                      // 0: spacemesh.v1.ConnectionInfo.Kind
	(*CheckpointStreamRequest)(nil),               // 1: spacemesh.v1.CheckpointStreamRequest
	(*CheckpointStreamResponse)(nil),              // 2: spacemesh.v1.CheckpointStreamResponse
	(*RecoverRequest)(nil),                        // 3: spacemesh.v1.RecoverRequest
	(*Event)(nil),                                 // 4: spacemesh.v1.Event
	(*EventBeacon)(nil),                           // 5: spacemesh.v1.EventBeacon
	(*EventInitStart)(nil),                        // 6: spacemesh.v1.EventInitStart
	(*EventInitFailed)(nil),                       // 7: spacemesh.v1.EventInitFailed
	(*EventInitComplete)(nil),                     // 8: spacemesh.v1.EventInitComplete
	(*EventPostServiceStarted)(nil),               // 9: spacemesh.v1.EventPostServiceStarted
	(*EventPostServiceStopped)(nil),               // 10: spacemesh.v1.EventPostServiceStopped
	(*EventPostStart)(nil),                        // 11: spacemesh.v1.EventPostStart
	(*EventPostComplete)(nil),                     // 12: spacemesh.v1.EventPostComplete
	(*EventPoetWaitRound)(nil),                    // 13: spacemesh.v1.EventPoetWaitRound
	(*EventWaitingForPoETRegistrationWindow)(nil), // 14: spacemesh.v1.EventWaitingForPoETRegistrationWindow
	(*EventPoetWaitProof)(nil),                    // 15: spacemesh.v1.EventPoetWaitProof
	(*EventWaitingForPoETRoundEnd)(nil),           // 16: spacemesh.v1.EventWaitingForPoETRoundEnd
	(*EventAtxPubished)(nil),                      // 17: spacemesh.v1.EventAtxPubished
	(*EventEligibilities)(nil),                    // 18: spacemesh.v1.EventEligibilities
	(*ProposalEligibility)(nil),                   // 19: spacemesh.v1.ProposalEligibility
	(*EventProposal)(nil),                         // 20: spacemesh.v1.EventProposal
	(*EventMalfeasance)(nil),                      // 21: spacemesh.v1.EventMalfeasance
	(*EventStreamRequest)(nil),                    // 22: spacemesh.v1.EventStreamRequest
	(*EventRegisteredInPoet)(nil),                 // 23: spacemesh.v1.EventRegisteredInPoet
	(*EventProofDownloadedFromPoet)(nil),          // 24: spacemesh.v1.EventProofDownloadedFromPoet
	(*EventBestProofSelected)(nil),                // 25: spacemesh.v1.EventBestProofSelected
	(*ConnectionInfo)(nil),                        // 26: spacemesh.v1.ConnectionInfo
	(*PeerRequestStats)(nil),                      // 27: spacemesh.v1.PeerRequestStats
	(*PeerInfo)(nil),                              // 28: spacemesh.v1.PeerInfo
	(*timestamppb.Timestamp)(nil),                 // 29: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                   // 30: google.protobuf.Duration
	(*MalfeasanceProof)(nil),                      // 31: spacemesh.v1.MalfeasanceProof
}
var file_spacemesh_v1_admin_types_proto_depIdxs = []int32{
	29, // 0: spacemesh.v1.Event.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 1: spacemesh.v1.Event.beacon:type_name -> spacemesh.v1.EventBeacon
	6,  // 2: spacemesh.v1.Event.init_start:type_name -> spacemesh.v1.EventInitStart
	8,  // 3: spacemesh.v1.Event.init_complete:type_name -> spacemesh.v1.EventInitComplete
	11, // 4: spacemesh.v1.Event.post_start:type_name -> spacemesh.v1.EventPostStart
	12, // 5: spacemesh.v1.Event.post_complete:type_name -> spacemesh.v1.EventPostComplete
	13, // 6: spacemesh.v1.Event.poet_wait_round:type_name -> spacemesh.v1.EventPoetWaitRound
	15, // 7: spacemesh.v1.Event.poet_wait_proof:type_name -> spacemesh.v1.EventPoetWaitProof
	17, // 8: spacemesh.v1.Event.atx_published:type_name -> spacemesh.v1.EventAtxPubished
	18, // 9: spacemesh.v1.Event.eligibilities:type_name -> spacemesh.v1.EventEligibilities
	20, // 10: spacemesh.v1.Event.proposal:type_name -> spacemesh.v1.EventProposal
	7,  // 11: spacemesh.v1.Event.init_failed:type_name -> spacemesh.v1.EventInitFailed
	21, // 12: spacemesh.v1.Event.malfeasance:type_name -> spacemesh.v1.EventMalfeasance
	9,  // 13: spacemesh.v1.Event.post_service_started:type_name -> spacemesh.v1.EventPostServiceStarted
	10, // 14: spacemesh.v1.Event.post_service_stopped:type_name -> spacemesh.v1.EventPostServiceStopped
	14, // 15: spacemesh.v1.Event.waiting_for_poet_registration_window:type_name -> spacemesh.v1.EventWaitingForPoETRegistrationWindow
	24, // 16: spacemesh.v1.Event.proof_downloaded_from_poet:type_name -> spacemesh.v1.EventProofDownloadedFromPoet
	23, // 17: spacemesh.v1.Event.registered_in_poet:type_name -> spacemesh.v1.EventRegisteredInPoet
	25, // 18: spacemesh.v1.Event.best_proof_selected:type_name -> spacemesh.v1.EventBestProofSelected
	16, // 19: spacemesh.v1.Event.waiting_for_poet_round_end:type_name -> spacemesh.v1.EventWaitingForPoETRoundEnd
	30, // 20: spacemesh.v1.EventPoetWaitRound.wait:type_name -> google.protobuf.Duration
	29, // 21: spacemesh.v1.EventPoetWaitRound.until:type_name -> google.protobuf.Timestamp
	29, // 22: spacemesh.v1.EventWaitingForPoETRegistrationWindow.round_end:type_name -> google.protobuf.Timestamp
	30, // 23: spacemesh.v1.EventPoetWaitProof.wait:type_name -> google.protobuf.Duration
	29, // 24: spacemesh.v1.EventPoetWaitProof.until:type_name -> google.protobuf.Timestamp
	29, // 25: spacemesh.v1.EventWaitingForPoETRoundEnd.round_end:type_name -> google.protobuf.Timestamp
	30, // 26: spacemesh.v1.EventAtxPubished.wait:type_name -> google.protobuf.Duration
	29, // 27: spacemesh.v1.EventAtxPubished.until:type_name -> google.protobuf.Timestamp
	19, // 28: spacemesh.v1.EventEligibilities.eligibilities:type_name -> spacemesh.v1.ProposalEligibility
	31, // 29: spacemesh.v1.EventMalfeasance.proof:type_name -> spacemesh.v1.MalfeasanceProof
	30, // 30: spacemesh.v1.ConnectionInfo.uptime:type_name -> google.protobuf.Duration
	0,  // 31: spacemesh.v1.ConnectionInfo.kind:type_name -> spacemesh.v1.ConnectionInfo.Kind
	30, // 32: spacemesh.v1.PeerRequestStats.latency:type_name -> google.protobuf.Duration
	26, // 33: spacemesh.v1.PeerInfo.connections:type_name -> spacemesh.v1.ConnectionInfo
	27, // 34: spacemesh.v1.PeerInfo.client_stats:type_name -> spacemesh.v1.PeerRequestStats
	27, // 35: spacemesh.v1.PeerInfo.server_stats:type_name -> spacemesh.v1.PeerRequestStats
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_spacemesh_v1_admin_types_proto_init() }
func file_spacemesh_v1_admin_types_proto_init() {
	if File_spacemesh_v1_admin_types_proto != nil {
		return
	}
	file_spacemesh_v1_types_proto_init()
	file_spacemesh_v1_admin_types_proto_msgTypes[3].OneofWrappers = []any{
		(*Event_Beacon)(nil),
		(*Event_InitStart)(nil),
		(*Event_InitComplete)(nil),
		(*Event_PostStart)(nil),
		(*Event_PostComplete)(nil),
		(*Event_PoetWaitRound)(nil),
		(*Event_PoetWaitProof)(nil),
		(*Event_AtxPublished)(nil),
		(*Event_Eligibilities)(nil),
		(*Event_Proposal)(nil),
		(*Event_InitFailed)(nil),
		(*Event_Malfeasance)(nil),
		(*Event_PostServiceStarted)(nil),
		(*Event_PostServiceStopped)(nil),
		(*Event_WaitingForPoetRegistrationWindow)(nil),
		(*Event_ProofDownloadedFromPoet)(nil),
		(*Event_RegisteredInPoet)(nil),
		(*Event_BestProofSelected)(nil),
		(*Event_WaitingForPoetRoundEnd)(nil),
	}
	file_spacemesh_v1_admin_types_proto_msgTypes[26].OneofWrappers = []any{}
	file_spacemesh_v1_admin_types_proto_msgTypes[27].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spacemesh_v1_admin_types_proto_rawDesc), len(file_spacemesh_v1_admin_types_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spacemesh_v1_admin_types_proto_goTypes,
		DependencyIndexes: file_spacemesh_v1_admin_types_proto_depIdxs,
		EnumInfos:         file_spacemesh_v1_admin_types_proto_enumTypes,
		MessageInfos:      file_spacemesh_v1_admin_types_proto_msgTypes,
	}.Build()
	File_spacemesh_v1_admin_types_proto = out.File
	file_spacemesh_v1_admin_types_proto_goTypes = nil
	file_spacemesh_v1_admin_types_proto_depIdxs = nil
}

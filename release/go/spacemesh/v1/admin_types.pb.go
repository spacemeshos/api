// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.5
// source: spacemesh/v1/admin_types.proto

package v1

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckpointStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotLayer uint32 `protobuf:"varint,1,opt,name=snapshot_layer,json=snapshotLayer,proto3" json:"snapshot_layer,omitempty"`
	NumAtxs       uint32 `protobuf:"varint,2,opt,name=num_atxs,json=numAtxs,proto3" json:"num_atxs,omitempty"`
}

func (x *CheckpointStreamRequest) Reset() {
	*x = CheckpointStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointStreamRequest) ProtoMessage() {}

func (x *CheckpointStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointStreamRequest.ProtoReflect.Descriptor instead.
func (*CheckpointStreamRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{0}
}

func (x *CheckpointStreamRequest) GetSnapshotLayer() uint32 {
	if x != nil {
		return x.SnapshotLayer
	}
	return 0
}

func (x *CheckpointStreamRequest) GetNumAtxs() uint32 {
	if x != nil {
		return x.NumAtxs
	}
	return 0
}

type CheckpointStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckpointStreamResponse) Reset() {
	*x = CheckpointStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointStreamResponse) ProtoMessage() {}

func (x *CheckpointStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointStreamResponse.ProtoReflect.Descriptor instead.
func (*CheckpointStreamResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{1}
}

func (x *CheckpointStreamResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RecoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri          string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	RestoreLayer uint32 `protobuf:"varint,2,opt,name=restore_layer,json=restoreLayer,proto3" json:"restore_layer,omitempty"`
}

func (x *RecoverRequest) Reset() {
	*x = RecoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverRequest) ProtoMessage() {}

func (x *RecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverRequest.ProtoReflect.Descriptor instead.
func (*RecoverRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{2}
}

func (x *RecoverRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *RecoverRequest) GetRestoreLayer() uint32 {
	if x != nil {
		return x.RestoreLayer
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// time when event occured.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// the reason of the failure may be complex to pinpoint.
	// for the first version we want to highlight that failure occured and defer user to logs.
	Failure bool   `protobuf:"varint,2,opt,name=failure,proto3" json:"failure,omitempty"`
	Help    string `protobuf:"bytes,3,opt,name=help,proto3" json:"help,omitempty"`
	// Types that are assignable to Details:
	//
	//	*Event_Beacon
	//	*Event_InitStart
	//	*Event_InitComplete
	//	*Event_PostStart
	//	*Event_PostComplete
	//	*Event_PoetWaitRound
	//	*Event_PoetWaitProof
	//	*Event_AtxPublished
	//	*Event_Eligibilities
	//	*Event_Proposal
	Details isEvent_Details `protobuf_oneof:"details"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetFailure() bool {
	if x != nil {
		return x.Failure
	}
	return false
}

func (x *Event) GetHelp() string {
	if x != nil {
		return x.Help
	}
	return ""
}

func (m *Event) GetDetails() isEvent_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *Event) GetBeacon() *EventBeacon {
	if x, ok := x.GetDetails().(*Event_Beacon); ok {
		return x.Beacon
	}
	return nil
}

func (x *Event) GetInitStart() *EventInitStart {
	if x, ok := x.GetDetails().(*Event_InitStart); ok {
		return x.InitStart
	}
	return nil
}

func (x *Event) GetInitComplete() *EventInitComplete {
	if x, ok := x.GetDetails().(*Event_InitComplete); ok {
		return x.InitComplete
	}
	return nil
}

func (x *Event) GetPostStart() *EventPostStart {
	if x, ok := x.GetDetails().(*Event_PostStart); ok {
		return x.PostStart
	}
	return nil
}

func (x *Event) GetPostComplete() *EventPostComplete {
	if x, ok := x.GetDetails().(*Event_PostComplete); ok {
		return x.PostComplete
	}
	return nil
}

func (x *Event) GetPoetWaitRound() *EventPoetWaitRound {
	if x, ok := x.GetDetails().(*Event_PoetWaitRound); ok {
		return x.PoetWaitRound
	}
	return nil
}

func (x *Event) GetPoetWaitProof() *EventPoetWaitProof {
	if x, ok := x.GetDetails().(*Event_PoetWaitProof); ok {
		return x.PoetWaitProof
	}
	return nil
}

func (x *Event) GetAtxPublished() *EventAtxPubished {
	if x, ok := x.GetDetails().(*Event_AtxPublished); ok {
		return x.AtxPublished
	}
	return nil
}

func (x *Event) GetEligibilities() *EventEligibilities {
	if x, ok := x.GetDetails().(*Event_Eligibilities); ok {
		return x.Eligibilities
	}
	return nil
}

func (x *Event) GetProposal() *EventProposal {
	if x, ok := x.GetDetails().(*Event_Proposal); ok {
		return x.Proposal
	}
	return nil
}

type isEvent_Details interface {
	isEvent_Details()
}

type Event_Beacon struct {
	Beacon *EventBeacon `protobuf:"bytes,4,opt,name=beacon,proto3,oneof"`
}

type Event_InitStart struct {
	InitStart *EventInitStart `protobuf:"bytes,5,opt,name=init_start,json=initStart,proto3,oneof"`
}

type Event_InitComplete struct {
	InitComplete *EventInitComplete `protobuf:"bytes,6,opt,name=init_complete,json=initComplete,proto3,oneof"`
}

type Event_PostStart struct {
	PostStart *EventPostStart `protobuf:"bytes,7,opt,name=post_start,json=postStart,proto3,oneof"`
}

type Event_PostComplete struct {
	PostComplete *EventPostComplete `protobuf:"bytes,8,opt,name=post_complete,json=postComplete,proto3,oneof"`
}

type Event_PoetWaitRound struct {
	PoetWaitRound *EventPoetWaitRound `protobuf:"bytes,9,opt,name=poet_wait_round,json=poetWaitRound,proto3,oneof"`
}

type Event_PoetWaitProof struct {
	PoetWaitProof *EventPoetWaitProof `protobuf:"bytes,10,opt,name=poet_wait_proof,json=poetWaitProof,proto3,oneof"`
}

type Event_AtxPublished struct {
	AtxPublished *EventAtxPubished `protobuf:"bytes,11,opt,name=atx_published,json=atxPublished,proto3,oneof"`
}

type Event_Eligibilities struct {
	Eligibilities *EventEligibilities `protobuf:"bytes,12,opt,name=eligibilities,proto3,oneof"`
}

type Event_Proposal struct {
	Proposal *EventProposal `protobuf:"bytes,13,opt,name=proposal,proto3,oneof"`
}

func (*Event_Beacon) isEvent_Details() {}

func (*Event_InitStart) isEvent_Details() {}

func (*Event_InitComplete) isEvent_Details() {}

func (*Event_PostStart) isEvent_Details() {}

func (*Event_PostComplete) isEvent_Details() {}

func (*Event_PoetWaitRound) isEvent_Details() {}

func (*Event_PoetWaitProof) isEvent_Details() {}

func (*Event_AtxPublished) isEvent_Details() {}

func (*Event_Eligibilities) isEvent_Details() {}

func (*Event_Proposal) isEvent_Details() {}

type EventBeacon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch  uint32 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Beacon []byte `protobuf:"bytes,2,opt,name=beacon,proto3" json:"beacon,omitempty"`
}

func (x *EventBeacon) Reset() {
	*x = EventBeacon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBeacon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBeacon) ProtoMessage() {}

func (x *EventBeacon) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBeacon.ProtoReflect.Descriptor instead.
func (*EventBeacon) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{4}
}

func (x *EventBeacon) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *EventBeacon) GetBeacon() []byte {
	if x != nil {
		return x.Beacon
	}
	return nil
}

type EventInitStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Smesher    []byte `protobuf:"bytes,1,opt,name=smesher,proto3" json:"smesher,omitempty"`
	Commitment []byte `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
}

func (x *EventInitStart) Reset() {
	*x = EventInitStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventInitStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInitStart) ProtoMessage() {}

func (x *EventInitStart) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInitStart.ProtoReflect.Descriptor instead.
func (*EventInitStart) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{5}
}

func (x *EventInitStart) GetSmesher() []byte {
	if x != nil {
		return x.Smesher
	}
	return nil
}

func (x *EventInitStart) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

type EventInitComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventInitComplete) Reset() {
	*x = EventInitComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventInitComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInitComplete) ProtoMessage() {}

func (x *EventInitComplete) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInitComplete.ProtoReflect.Descriptor instead.
func (*EventInitComplete) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{6}
}

type EventPostStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge []byte `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *EventPostStart) Reset() {
	*x = EventPostStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPostStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPostStart) ProtoMessage() {}

func (x *EventPostStart) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPostStart.ProtoReflect.Descriptor instead.
func (*EventPostStart) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{7}
}

func (x *EventPostStart) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

type EventPostComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge []byte `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *EventPostComplete) Reset() {
	*x = EventPostComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPostComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPostComplete) ProtoMessage() {}

func (x *EventPostComplete) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPostComplete.ProtoReflect.Descriptor instead.
func (*EventPostComplete) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{8}
}

func (x *EventPostComplete) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

type EventPoetWaitRound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current uint32             `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Publish uint32             `protobuf:"varint,2,opt,name=publish,proto3" json:"publish,omitempty"`
	Wait    *duration.Duration `protobuf:"bytes,3,opt,name=wait,proto3" json:"wait,omitempty"`
}

func (x *EventPoetWaitRound) Reset() {
	*x = EventPoetWaitRound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPoetWaitRound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPoetWaitRound) ProtoMessage() {}

func (x *EventPoetWaitRound) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPoetWaitRound.ProtoReflect.Descriptor instead.
func (*EventPoetWaitRound) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{9}
}

func (x *EventPoetWaitRound) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *EventPoetWaitRound) GetPublish() uint32 {
	if x != nil {
		return x.Publish
	}
	return 0
}

func (x *EventPoetWaitRound) GetWait() *duration.Duration {
	if x != nil {
		return x.Wait
	}
	return nil
}

type EventPoetWaitProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Publish uint32             `protobuf:"varint,1,opt,name=publish,proto3" json:"publish,omitempty"`
	Target  uint32             `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	Wait    *duration.Duration `protobuf:"bytes,3,opt,name=wait,proto3" json:"wait,omitempty"`
}

func (x *EventPoetWaitProof) Reset() {
	*x = EventPoetWaitProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPoetWaitProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPoetWaitProof) ProtoMessage() {}

func (x *EventPoetWaitProof) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPoetWaitProof.ProtoReflect.Descriptor instead.
func (*EventPoetWaitProof) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{10}
}

func (x *EventPoetWaitProof) GetPublish() uint32 {
	if x != nil {
		return x.Publish
	}
	return 0
}

func (x *EventPoetWaitProof) GetTarget() uint32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *EventPoetWaitProof) GetWait() *duration.Duration {
	if x != nil {
		return x.Wait
	}
	return nil
}

type EventAtxPubished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current uint32             `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Target  uint32             `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	Id      []byte             `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Wait    *duration.Duration `protobuf:"bytes,4,opt,name=wait,proto3" json:"wait,omitempty"`
}

func (x *EventAtxPubished) Reset() {
	*x = EventAtxPubished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventAtxPubished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAtxPubished) ProtoMessage() {}

func (x *EventAtxPubished) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAtxPubished.ProtoReflect.Descriptor instead.
func (*EventAtxPubished) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{11}
}

func (x *EventAtxPubished) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *EventAtxPubished) GetTarget() uint32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *EventAtxPubished) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *EventAtxPubished) GetWait() *duration.Duration {
	if x != nil {
		return x.Wait
	}
	return nil
}

type EventEligibilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch         uint32                 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Beacon        []byte                 `protobuf:"bytes,2,opt,name=beacon,proto3" json:"beacon,omitempty"`
	Atx           []byte                 `protobuf:"bytes,3,opt,name=atx,proto3" json:"atx,omitempty"`
	ActiveSetSize uint32                 `protobuf:"varint,4,opt,name=active_set_size,json=activeSetSize,proto3" json:"active_set_size,omitempty"`
	Eligibilities []*ProposalEligibility `protobuf:"bytes,5,rep,name=eligibilities,proto3" json:"eligibilities,omitempty"`
}

func (x *EventEligibilities) Reset() {
	*x = EventEligibilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventEligibilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEligibilities) ProtoMessage() {}

func (x *EventEligibilities) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEligibilities.ProtoReflect.Descriptor instead.
func (*EventEligibilities) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{12}
}

func (x *EventEligibilities) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *EventEligibilities) GetBeacon() []byte {
	if x != nil {
		return x.Beacon
	}
	return nil
}

func (x *EventEligibilities) GetAtx() []byte {
	if x != nil {
		return x.Atx
	}
	return nil
}

func (x *EventEligibilities) GetActiveSetSize() uint32 {
	if x != nil {
		return x.ActiveSetSize
	}
	return 0
}

func (x *EventEligibilities) GetEligibilities() []*ProposalEligibility {
	if x != nil {
		return x.Eligibilities
	}
	return nil
}

type ProposalEligibility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer uint32 `protobuf:"varint,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ProposalEligibility) Reset() {
	*x = ProposalEligibility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalEligibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalEligibility) ProtoMessage() {}

func (x *ProposalEligibility) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalEligibility.ProtoReflect.Descriptor instead.
func (*ProposalEligibility) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{13}
}

func (x *ProposalEligibility) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *ProposalEligibility) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Published proposal. Rewards will be received, once proposal is included into the block.
type EventProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer    uint32 `protobuf:"varint,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Proposal []byte `protobuf:"bytes,2,opt,name=proposal,proto3" json:"proposal,omitempty"`
}

func (x *EventProposal) Reset() {
	*x = EventProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProposal) ProtoMessage() {}

func (x *EventProposal) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventProposal.ProtoReflect.Descriptor instead.
func (*EventProposal) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{14}
}

func (x *EventProposal) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *EventProposal) GetProposal() []byte {
	if x != nil {
		return x.Proposal
	}
	return nil
}

type EventStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventStreamRequest) Reset() {
	*x = EventStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_admin_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamRequest) ProtoMessage() {}

func (x *EventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_admin_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStreamRequest.ProtoReflect.Descriptor instead.
func (*EventStreamRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_admin_types_proto_rawDescGZIP(), []int{15}
}

var File_spacemesh_v1_admin_types_proto protoreflect.FileDescriptor

var file_spacemesh_v1_admin_types_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x5b, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x74, 0x78, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x41, 0x74, 0x78, 0x73, 0x22, 0x2e, 0x0a, 0x18,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x0e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x22, 0xa1, 0x06, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0a,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x69,
	0x6e, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x70, 0x6f,
	0x65, 0x74, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x6f, 0x65, 0x74, 0x57, 0x61, 0x69,
	0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x4a, 0x0a, 0x0f, 0x70, 0x6f, 0x65, 0x74, 0x5f, 0x77,
	0x61, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x6f, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x12, 0x45, 0x0a, 0x0d, 0x61, 0x74, 0x78, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x78, 0x50, 0x75, 0x62, 0x69, 0x73, 0x68, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x74, 0x78,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x0d, 0x65, 0x6c, 0x69,
	0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x09,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3b, 0x0a, 0x0b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x65, 0x73,
	0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x2e, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x12, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x6f, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x12, 0x2d, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x77,
	0x61, 0x69, 0x74, 0x22, 0x75, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x65, 0x74,
	0x57, 0x61, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x77,
	0x61, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x78, 0x50, 0x75, 0x62, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2d, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74,
	0x22, 0xc5, 0x01, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x61, 0x74, 0x78, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x47, 0x0a, 0x0d, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x45, 0x6c,
	0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x65, 0x6c, 0x69, 0x67, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x0d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x22, 0x14,
	0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x6f, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_spacemesh_v1_admin_types_proto_rawDescOnce sync.Once
	file_spacemesh_v1_admin_types_proto_rawDescData = file_spacemesh_v1_admin_types_proto_rawDesc
)

func file_spacemesh_v1_admin_types_proto_rawDescGZIP() []byte {
	file_spacemesh_v1_admin_types_proto_rawDescOnce.Do(func() {
		file_spacemesh_v1_admin_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_spacemesh_v1_admin_types_proto_rawDescData)
	})
	return file_spacemesh_v1_admin_types_proto_rawDescData
}

var file_spacemesh_v1_admin_types_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_spacemesh_v1_admin_types_proto_goTypes = []interface{}{
	(*CheckpointStreamRequest)(nil),  // 0: spacemesh.v1.CheckpointStreamRequest
	(*CheckpointStreamResponse)(nil), // 1: spacemesh.v1.CheckpointStreamResponse
	(*RecoverRequest)(nil),           // 2: spacemesh.v1.RecoverRequest
	(*Event)(nil),                    // 3: spacemesh.v1.Event
	(*EventBeacon)(nil),              // 4: spacemesh.v1.EventBeacon
	(*EventInitStart)(nil),           // 5: spacemesh.v1.EventInitStart
	(*EventInitComplete)(nil),        // 6: spacemesh.v1.EventInitComplete
	(*EventPostStart)(nil),           // 7: spacemesh.v1.EventPostStart
	(*EventPostComplete)(nil),        // 8: spacemesh.v1.EventPostComplete
	(*EventPoetWaitRound)(nil),       // 9: spacemesh.v1.EventPoetWaitRound
	(*EventPoetWaitProof)(nil),       // 10: spacemesh.v1.EventPoetWaitProof
	(*EventAtxPubished)(nil),         // 11: spacemesh.v1.EventAtxPubished
	(*EventEligibilities)(nil),       // 12: spacemesh.v1.EventEligibilities
	(*ProposalEligibility)(nil),      // 13: spacemesh.v1.ProposalEligibility
	(*EventProposal)(nil),            // 14: spacemesh.v1.EventProposal
	(*EventStreamRequest)(nil),       // 15: spacemesh.v1.EventStreamRequest
	(*timestamppb.Timestamp)(nil),    // 16: google.protobuf.Timestamp
	(*duration.Duration)(nil),        // 17: google.protobuf.Duration
}
var file_spacemesh_v1_admin_types_proto_depIdxs = []int32{
	16, // 0: spacemesh.v1.Event.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 1: spacemesh.v1.Event.beacon:type_name -> spacemesh.v1.EventBeacon
	5,  // 2: spacemesh.v1.Event.init_start:type_name -> spacemesh.v1.EventInitStart
	6,  // 3: spacemesh.v1.Event.init_complete:type_name -> spacemesh.v1.EventInitComplete
	7,  // 4: spacemesh.v1.Event.post_start:type_name -> spacemesh.v1.EventPostStart
	8,  // 5: spacemesh.v1.Event.post_complete:type_name -> spacemesh.v1.EventPostComplete
	9,  // 6: spacemesh.v1.Event.poet_wait_round:type_name -> spacemesh.v1.EventPoetWaitRound
	10, // 7: spacemesh.v1.Event.poet_wait_proof:type_name -> spacemesh.v1.EventPoetWaitProof
	11, // 8: spacemesh.v1.Event.atx_published:type_name -> spacemesh.v1.EventAtxPubished
	12, // 9: spacemesh.v1.Event.eligibilities:type_name -> spacemesh.v1.EventEligibilities
	14, // 10: spacemesh.v1.Event.proposal:type_name -> spacemesh.v1.EventProposal
	17, // 11: spacemesh.v1.EventPoetWaitRound.wait:type_name -> google.protobuf.Duration
	17, // 12: spacemesh.v1.EventPoetWaitProof.wait:type_name -> google.protobuf.Duration
	17, // 13: spacemesh.v1.EventAtxPubished.wait:type_name -> google.protobuf.Duration
	13, // 14: spacemesh.v1.EventEligibilities.eligibilities:type_name -> spacemesh.v1.ProposalEligibility
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_spacemesh_v1_admin_types_proto_init() }
func file_spacemesh_v1_admin_types_proto_init() {
	if File_spacemesh_v1_admin_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spacemesh_v1_admin_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBeacon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventInitStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventInitComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPostStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPostComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPoetWaitRound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPoetWaitProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventAtxPubished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventEligibilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalEligibility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_admin_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_spacemesh_v1_admin_types_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Event_Beacon)(nil),
		(*Event_InitStart)(nil),
		(*Event_InitComplete)(nil),
		(*Event_PostStart)(nil),
		(*Event_PostComplete)(nil),
		(*Event_PoetWaitRound)(nil),
		(*Event_PoetWaitProof)(nil),
		(*Event_AtxPublished)(nil),
		(*Event_Eligibilities)(nil),
		(*Event_Proposal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spacemesh_v1_admin_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spacemesh_v1_admin_types_proto_goTypes,
		DependencyIndexes: file_spacemesh_v1_admin_types_proto_depIdxs,
		MessageInfos:      file_spacemesh_v1_admin_types_proto_msgTypes,
	}.Build()
	File_spacemesh_v1_admin_types_proto = out.File
	file_spacemesh_v1_admin_types_proto_rawDesc = nil
	file_spacemesh_v1_admin_types_proto_goTypes = nil
	file_spacemesh_v1_admin_types_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: spacemesh/v1/global_state_types.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// All data items that touch an account (see below note, under the associated
// message)
type AccountDataFlag int32

const (
	AccountDataFlag_ACCOUNT_DATA_FLAG_UNSPECIFIED         AccountDataFlag = 0
	AccountDataFlag_ACCOUNT_DATA_FLAG_TRANSACTION_RECEIPT AccountDataFlag = 1 // tx receipt for a tx to or from an account
	AccountDataFlag_ACCOUNT_DATA_FLAG_REWARD              AccountDataFlag = 2 // reward awarded to an account
	AccountDataFlag_ACCOUNT_DATA_FLAG_ACCOUNT             AccountDataFlag = 4 // account data changes (counter or balance)
)

// Enum value maps for AccountDataFlag.
var (
	AccountDataFlag_name = map[int32]string{
		0: "ACCOUNT_DATA_FLAG_UNSPECIFIED",
		1: "ACCOUNT_DATA_FLAG_TRANSACTION_RECEIPT",
		2: "ACCOUNT_DATA_FLAG_REWARD",
		4: "ACCOUNT_DATA_FLAG_ACCOUNT",
	}
	AccountDataFlag_value = map[string]int32{
		"ACCOUNT_DATA_FLAG_UNSPECIFIED":         0,
		"ACCOUNT_DATA_FLAG_TRANSACTION_RECEIPT": 1,
		"ACCOUNT_DATA_FLAG_REWARD":              2,
		"ACCOUNT_DATA_FLAG_ACCOUNT":             4,
	}
)

func (x AccountDataFlag) Enum() *AccountDataFlag {
	p := new(AccountDataFlag)
	*p = x
	return p
}

func (x AccountDataFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountDataFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_global_state_types_proto_enumTypes[0].Descriptor()
}

func (AccountDataFlag) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_global_state_types_proto_enumTypes[0]
}

func (x AccountDataFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountDataFlag.Descriptor instead.
func (AccountDataFlag) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{0}
}

type GlobalStateDataFlag int32

const (
	GlobalStateDataFlag_GLOBAL_STATE_DATA_FLAG_UNSPECIFIED         GlobalStateDataFlag = 0
	GlobalStateDataFlag_GLOBAL_STATE_DATA_FLAG_TRANSACTION_RECEIPT GlobalStateDataFlag = 1 // tx receipt generated
	GlobalStateDataFlag_GLOBAL_STATE_DATA_FLAG_REWARD              GlobalStateDataFlag = 2 // reward awarded to an account (includes fees paid)
	GlobalStateDataFlag_GLOBAL_STATE_DATA_FLAG_ACCOUNT             GlobalStateDataFlag = 4 // account data changes (counter or balance)
	GlobalStateDataFlag_GLOBAL_STATE_DATA_FLAG_GLOBAL_STATE_HASH   GlobalStateDataFlag = 8 // hash of global state (i.e., state root)
)

// Enum value maps for GlobalStateDataFlag.
var (
	GlobalStateDataFlag_name = map[int32]string{
		0: "GLOBAL_STATE_DATA_FLAG_UNSPECIFIED",
		1: "GLOBAL_STATE_DATA_FLAG_TRANSACTION_RECEIPT",
		2: "GLOBAL_STATE_DATA_FLAG_REWARD",
		4: "GLOBAL_STATE_DATA_FLAG_ACCOUNT",
		8: "GLOBAL_STATE_DATA_FLAG_GLOBAL_STATE_HASH",
	}
	GlobalStateDataFlag_value = map[string]int32{
		"GLOBAL_STATE_DATA_FLAG_UNSPECIFIED":         0,
		"GLOBAL_STATE_DATA_FLAG_TRANSACTION_RECEIPT": 1,
		"GLOBAL_STATE_DATA_FLAG_REWARD":              2,
		"GLOBAL_STATE_DATA_FLAG_ACCOUNT":             4,
		"GLOBAL_STATE_DATA_FLAG_GLOBAL_STATE_HASH":   8,
	}
)

func (x GlobalStateDataFlag) Enum() *GlobalStateDataFlag {
	p := new(GlobalStateDataFlag)
	*p = x
	return p
}

func (x GlobalStateDataFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GlobalStateDataFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_global_state_types_proto_enumTypes[1].Descriptor()
}

func (GlobalStateDataFlag) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_global_state_types_proto_enumTypes[1]
}

func (x GlobalStateDataFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GlobalStateDataFlag.Descriptor instead.
func (GlobalStateDataFlag) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{1}
}

type TransactionReceipt_TransactionResult int32

const (
	TransactionReceipt_TRANSACTION_RESULT_UNSPECIFIED        TransactionReceipt_TransactionResult = 0
	TransactionReceipt_TRANSACTION_RESULT_EXECUTED           TransactionReceipt_TransactionResult = 1 // executed w/o error by the STF
	TransactionReceipt_TRANSACTION_RESULT_BAD_COUNTER        TransactionReceipt_TransactionResult = 2 // unexpected transaction counter
	TransactionReceipt_TRANSACTION_RESULT_RUNTIME_EXCEPTION  TransactionReceipt_TransactionResult = 3 // app code exception
	TransactionReceipt_TRANSACTION_RESULT_INSUFFICIENT_GAS   TransactionReceipt_TransactionResult = 4 // out of gas
	TransactionReceipt_TRANSACTION_RESULT_INSUFFICIENT_FUNDS TransactionReceipt_TransactionResult = 5 // failed due to sender's insufficient funds
)

// Enum value maps for TransactionReceipt_TransactionResult.
var (
	TransactionReceipt_TransactionResult_name = map[int32]string{
		0: "TRANSACTION_RESULT_UNSPECIFIED",
		1: "TRANSACTION_RESULT_EXECUTED",
		2: "TRANSACTION_RESULT_BAD_COUNTER",
		3: "TRANSACTION_RESULT_RUNTIME_EXCEPTION",
		4: "TRANSACTION_RESULT_INSUFFICIENT_GAS",
		5: "TRANSACTION_RESULT_INSUFFICIENT_FUNDS",
	}
	TransactionReceipt_TransactionResult_value = map[string]int32{
		"TRANSACTION_RESULT_UNSPECIFIED":        0,
		"TRANSACTION_RESULT_EXECUTED":           1,
		"TRANSACTION_RESULT_BAD_COUNTER":        2,
		"TRANSACTION_RESULT_RUNTIME_EXCEPTION":  3,
		"TRANSACTION_RESULT_INSUFFICIENT_GAS":   4,
		"TRANSACTION_RESULT_INSUFFICIENT_FUNDS": 5,
	}
)

func (x TransactionReceipt_TransactionResult) Enum() *TransactionReceipt_TransactionResult {
	p := new(TransactionReceipt_TransactionResult)
	*p = x
	return p
}

func (x TransactionReceipt_TransactionResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionReceipt_TransactionResult) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_global_state_types_proto_enumTypes[2].Descriptor()
}

func (TransactionReceipt_TransactionResult) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_global_state_types_proto_enumTypes[2]
}

func (x TransactionReceipt_TransactionResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionReceipt_TransactionResult.Descriptor instead.
func (TransactionReceipt_TransactionResult) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{8, 0}
}

type AccountState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counter uint64  `protobuf:"varint,1,opt,name=counter,proto3" json:"counter,omitempty"` // aka nonce
	Balance *Amount `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`  // known account balance
}

func (x *AccountState) Reset() {
	*x = AccountState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountState) ProtoMessage() {}

func (x *AccountState) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountState.ProtoReflect.Descriptor instead.
func (*AccountState) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{0}
}

func (x *AccountState) GetCounter() uint64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *AccountState) GetBalance() *Amount {
	if x != nil {
		return x.Balance
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId      *AccountId    `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`                // account public address
	StateCurrent   *AccountState `protobuf:"bytes,2,opt,name=state_current,json=stateCurrent,proto3" json:"state_current,omitempty"`       // current state
	StateProjected *AccountState `protobuf:"bytes,3,opt,name=state_projected,json=stateProjected,proto3" json:"state_projected,omitempty"` // projected state (includes pending txs)
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{1}
}

func (x *Account) GetAccountId() *AccountId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *Account) GetStateCurrent() *AccountState {
	if x != nil {
		return x.StateCurrent
	}
	return nil
}

func (x *Account) GetStateProjected() *AccountState {
	if x != nil {
		return x.StateProjected
	}
	return nil
}

type AccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *AccountId `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *AccountRequest) Reset() {
	*x = AccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRequest) ProtoMessage() {}

func (x *AccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRequest.ProtoReflect.Descriptor instead.
func (*AccountRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{2}
}

func (x *AccountRequest) GetAccountId() *AccountId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type AccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountWrapper *Account `protobuf:"bytes,1,opt,name=account_wrapper,json=accountWrapper,proto3" json:"account_wrapper,omitempty"`
}

func (x *AccountResponse) Reset() {
	*x = AccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountResponse) ProtoMessage() {}

func (x *AccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountResponse.ProtoReflect.Descriptor instead.
func (*AccountResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{3}
}

func (x *AccountResponse) GetAccountWrapper() *Account {
	if x != nil {
		return x.AccountWrapper
	}
	return nil
}

type AccountDataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId        *AccountId `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountDataFlags uint32     `protobuf:"varint,2,opt,name=account_data_flags,json=accountDataFlags,proto3" json:"account_data_flags,omitempty"` // bit field of AccountDataFlag
}

func (x *AccountDataFilter) Reset() {
	*x = AccountDataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDataFilter) ProtoMessage() {}

func (x *AccountDataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDataFilter.ProtoReflect.Descriptor instead.
func (*AccountDataFilter) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{4}
}

func (x *AccountDataFilter) GetAccountId() *AccountId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *AccountDataFilter) GetAccountDataFlags() uint32 {
	if x != nil {
		return x.AccountDataFlags
	}
	return 0
}

type AccountDataStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *AccountDataFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *AccountDataStreamRequest) Reset() {
	*x = AccountDataStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDataStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDataStreamRequest) ProtoMessage() {}

func (x *AccountDataStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDataStreamRequest.ProtoReflect.Descriptor instead.
func (*AccountDataStreamRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{5}
}

func (x *AccountDataStreamRequest) GetFilter() *AccountDataFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type AccountDataStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datum *AccountData `protobuf:"bytes,1,opt,name=datum,proto3" json:"datum,omitempty"`
}

func (x *AccountDataStreamResponse) Reset() {
	*x = AccountDataStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDataStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDataStreamResponse) ProtoMessage() {}

func (x *AccountDataStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDataStreamResponse.ProtoReflect.Descriptor instead.
func (*AccountDataStreamResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{6}
}

func (x *AccountDataStreamResponse) GetDatum() *AccountData {
	if x != nil {
		return x.Datum
	}
	return nil
}

type AccountDataQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter     *AccountDataFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	MaxResults uint32             `protobuf:"varint,2,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"` // max numbers of results client would like to get
	Offset     uint32             `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`                           // return results from offset
}

func (x *AccountDataQueryRequest) Reset() {
	*x = AccountDataQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDataQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDataQueryRequest) ProtoMessage() {}

func (x *AccountDataQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDataQueryRequest.ProtoReflect.Descriptor instead.
func (*AccountDataQueryRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{7}
}

func (x *AccountDataQueryRequest) GetFilter() *AccountDataFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *AccountDataQueryRequest) GetMaxResults() uint32 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

func (x *AccountDataQueryRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type TransactionReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *TransactionId                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                 // the source transaction
	Result  TransactionReceipt_TransactionResult `protobuf:"varint,2,opt,name=result,proto3,enum=spacemesh.v1.TransactionReceipt_TransactionResult" json:"result,omitempty"` // tx processing result
	GasUsed uint64                               `protobuf:"varint,3,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`                                       // gas units used by the transaction
	Fee     *Amount                              `protobuf:"bytes,4,opt,name=fee,proto3" json:"fee,omitempty"`                                                               // transaction fee charged for the transaction (in smidge, gas_price * gas_used)
	Layer   *LayerNumber                         `protobuf:"bytes,5,opt,name=layer,proto3" json:"layer,omitempty"`                                                           // the layer in which the STF processed this transaction
	Index   uint32                               `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`                                                          // the index of the tx in the ordered list of txs to be executed by stf in the layer.
	SvmData []byte                               `protobuf:"bytes,7,opt,name=svm_data,json=svmData,proto3" json:"svm_data,omitempty"`                                        // svm binary data. Decode with svm-codec
}

func (x *TransactionReceipt) Reset() {
	*x = TransactionReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReceipt) ProtoMessage() {}

func (x *TransactionReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReceipt.ProtoReflect.Descriptor instead.
func (*TransactionReceipt) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{8}
}

func (x *TransactionReceipt) GetId() *TransactionId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TransactionReceipt) GetResult() TransactionReceipt_TransactionResult {
	if x != nil {
		return x.Result
	}
	return TransactionReceipt_TRANSACTION_RESULT_UNSPECIFIED
}

func (x *TransactionReceipt) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *TransactionReceipt) GetFee() *Amount {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *TransactionReceipt) GetLayer() *LayerNumber {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *TransactionReceipt) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TransactionReceipt) GetSvmData() []byte {
	if x != nil {
		return x.SvmData
	}
	return nil
}

// All data items that touch an account: receipts for transactions from, or to
// this account, as well as those that modify its state (e.g., token transfers).
// Rewards here includes fees paid. Account contains counter and balance updates.
// Note that this mixes concerns: transactions and rewards are _causes_ of a
// change to account state; nonce and balance updates are _results_.
type AccountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Datum:
	//	*AccountData_Reward
	//	*AccountData_Receipt
	//	*AccountData_AccountWrapper
	Datum isAccountData_Datum `protobuf_oneof:"datum"`
}

func (x *AccountData) Reset() {
	*x = AccountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountData) ProtoMessage() {}

func (x *AccountData) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountData.ProtoReflect.Descriptor instead.
func (*AccountData) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{9}
}

func (m *AccountData) GetDatum() isAccountData_Datum {
	if m != nil {
		return m.Datum
	}
	return nil
}

func (x *AccountData) GetReward() *Reward {
	if x, ok := x.GetDatum().(*AccountData_Reward); ok {
		return x.Reward
	}
	return nil
}

func (x *AccountData) GetReceipt() *TransactionReceipt {
	if x, ok := x.GetDatum().(*AccountData_Receipt); ok {
		return x.Receipt
	}
	return nil
}

func (x *AccountData) GetAccountWrapper() *Account {
	if x, ok := x.GetDatum().(*AccountData_AccountWrapper); ok {
		return x.AccountWrapper
	}
	return nil
}

type isAccountData_Datum interface {
	isAccountData_Datum()
}

type AccountData_Reward struct {
	Reward *Reward `protobuf:"bytes,1,opt,name=reward,proto3,oneof"`
}

type AccountData_Receipt struct {
	Receipt *TransactionReceipt `protobuf:"bytes,2,opt,name=receipt,proto3,oneof"`
}

type AccountData_AccountWrapper struct {
	AccountWrapper *Account `protobuf:"bytes,3,opt,name=account_wrapper,json=accountWrapper,proto3,oneof"`
}

func (*AccountData_Reward) isAccountData_Datum() {}

func (*AccountData_Receipt) isAccountData_Datum() {}

func (*AccountData_AccountWrapper) isAccountData_Datum() {}

type AccountDataQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalResults uint32         `protobuf:"varint,1,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	AccountItem  []*AccountData `protobuf:"bytes,2,rep,name=account_item,json=accountItem,proto3" json:"account_item,omitempty"`
}

func (x *AccountDataQueryResponse) Reset() {
	*x = AccountDataQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDataQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDataQueryResponse) ProtoMessage() {}

func (x *AccountDataQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDataQueryResponse.ProtoReflect.Descriptor instead.
func (*AccountDataQueryResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{10}
}

func (x *AccountDataQueryResponse) GetTotalResults() uint32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *AccountDataQueryResponse) GetAccountItem() []*AccountData {
	if x != nil {
		return x.AccountItem
	}
	return nil
}

type SmesherRewardStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *SmesherId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SmesherRewardStreamRequest) Reset() {
	*x = SmesherRewardStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmesherRewardStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmesherRewardStreamRequest) ProtoMessage() {}

func (x *SmesherRewardStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmesherRewardStreamRequest.ProtoReflect.Descriptor instead.
func (*SmesherRewardStreamRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{11}
}

func (x *SmesherRewardStreamRequest) GetId() *SmesherId {
	if x != nil {
		return x.Id
	}
	return nil
}

type SmesherRewardStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward *Reward `protobuf:"bytes,1,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *SmesherRewardStreamResponse) Reset() {
	*x = SmesherRewardStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmesherRewardStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmesherRewardStreamResponse) ProtoMessage() {}

func (x *SmesherRewardStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmesherRewardStreamResponse.ProtoReflect.Descriptor instead.
func (*SmesherRewardStreamResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{12}
}

func (x *SmesherRewardStreamResponse) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type SmesherDataQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmesherId  *SmesherId `protobuf:"bytes,1,opt,name=smesher_id,json=smesherId,proto3" json:"smesher_id,omitempty"`
	MaxResults uint32     `protobuf:"varint,2,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"` // max numbers of results client would like to get
	Offset     uint32     `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`                           // return results from offset
}

func (x *SmesherDataQueryRequest) Reset() {
	*x = SmesherDataQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmesherDataQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmesherDataQueryRequest) ProtoMessage() {}

func (x *SmesherDataQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmesherDataQueryRequest.ProtoReflect.Descriptor instead.
func (*SmesherDataQueryRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{13}
}

func (x *SmesherDataQueryRequest) GetSmesherId() *SmesherId {
	if x != nil {
		return x.SmesherId
	}
	return nil
}

func (x *SmesherDataQueryRequest) GetMaxResults() uint32 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

func (x *SmesherDataQueryRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SmesherDataQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalResults uint32    `protobuf:"varint,1,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	Rewards      []*Reward `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *SmesherDataQueryResponse) Reset() {
	*x = SmesherDataQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmesherDataQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmesherDataQueryResponse) ProtoMessage() {}

func (x *SmesherDataQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmesherDataQueryResponse.ProtoReflect.Descriptor instead.
func (*SmesherDataQueryResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{14}
}

func (x *SmesherDataQueryResponse) GetTotalResults() uint32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *SmesherDataQueryResponse) GetRewards() []*Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GlobalStateHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootHash []byte       `protobuf:"bytes,1,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	Layer    *LayerNumber `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *GlobalStateHash) Reset() {
	*x = GlobalStateHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalStateHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalStateHash) ProtoMessage() {}

func (x *GlobalStateHash) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalStateHash.ProtoReflect.Descriptor instead.
func (*GlobalStateHash) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{15}
}

func (x *GlobalStateHash) GetRootHash() []byte {
	if x != nil {
		return x.RootHash
	}
	return nil
}

func (x *GlobalStateHash) GetLayer() *LayerNumber {
	if x != nil {
		return x.Layer
	}
	return nil
}

// For now this is empty but in future we might want to allow this to take a
// layer number.
type GlobalStateHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GlobalStateHashRequest) Reset() {
	*x = GlobalStateHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalStateHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalStateHashRequest) ProtoMessage() {}

func (x *GlobalStateHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalStateHashRequest.ProtoReflect.Descriptor instead.
func (*GlobalStateHashRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{16}
}

type GlobalStateHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *GlobalStateHash `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GlobalStateHashResponse) Reset() {
	*x = GlobalStateHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalStateHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalStateHashResponse) ProtoMessage() {}

func (x *GlobalStateHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalStateHashResponse.ProtoReflect.Descriptor instead.
func (*GlobalStateHashResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{17}
}

func (x *GlobalStateHashResponse) GetResponse() *GlobalStateHash {
	if x != nil {
		return x.Response
	}
	return nil
}

type GlobalStateStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalStateDataFlags uint32 `protobuf:"varint,1,opt,name=global_state_data_flags,json=globalStateDataFlags,proto3" json:"global_state_data_flags,omitempty"` // bit field of GlobalStateDataFlag
}

func (x *GlobalStateStreamRequest) Reset() {
	*x = GlobalStateStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalStateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalStateStreamRequest) ProtoMessage() {}

func (x *GlobalStateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalStateStreamRequest.ProtoReflect.Descriptor instead.
func (*GlobalStateStreamRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{18}
}

func (x *GlobalStateStreamRequest) GetGlobalStateDataFlags() uint32 {
	if x != nil {
		return x.GlobalStateDataFlags
	}
	return 0
}

type GlobalStateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Datum:
	//	*GlobalStateData_Reward
	//	*GlobalStateData_Receipt
	//	*GlobalStateData_AccountWrapper
	//	*GlobalStateData_GlobalState
	Datum isGlobalStateData_Datum `protobuf_oneof:"datum"`
}

func (x *GlobalStateData) Reset() {
	*x = GlobalStateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalStateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalStateData) ProtoMessage() {}

func (x *GlobalStateData) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalStateData.ProtoReflect.Descriptor instead.
func (*GlobalStateData) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{19}
}

func (m *GlobalStateData) GetDatum() isGlobalStateData_Datum {
	if m != nil {
		return m.Datum
	}
	return nil
}

func (x *GlobalStateData) GetReward() *Reward {
	if x, ok := x.GetDatum().(*GlobalStateData_Reward); ok {
		return x.Reward
	}
	return nil
}

func (x *GlobalStateData) GetReceipt() *TransactionReceipt {
	if x, ok := x.GetDatum().(*GlobalStateData_Receipt); ok {
		return x.Receipt
	}
	return nil
}

func (x *GlobalStateData) GetAccountWrapper() *Account {
	if x, ok := x.GetDatum().(*GlobalStateData_AccountWrapper); ok {
		return x.AccountWrapper
	}
	return nil
}

func (x *GlobalStateData) GetGlobalState() *GlobalStateHash {
	if x, ok := x.GetDatum().(*GlobalStateData_GlobalState); ok {
		return x.GlobalState
	}
	return nil
}

type isGlobalStateData_Datum interface {
	isGlobalStateData_Datum()
}

type GlobalStateData_Reward struct {
	Reward *Reward `protobuf:"bytes,1,opt,name=reward,proto3,oneof"`
}

type GlobalStateData_Receipt struct {
	Receipt *TransactionReceipt `protobuf:"bytes,2,opt,name=receipt,proto3,oneof"`
}

type GlobalStateData_AccountWrapper struct {
	AccountWrapper *Account `protobuf:"bytes,3,opt,name=account_wrapper,json=accountWrapper,proto3,oneof"`
}

type GlobalStateData_GlobalState struct {
	GlobalState *GlobalStateHash `protobuf:"bytes,4,opt,name=global_state,json=globalState,proto3,oneof"`
}

func (*GlobalStateData_Reward) isGlobalStateData_Datum() {}

func (*GlobalStateData_Receipt) isGlobalStateData_Datum() {}

func (*GlobalStateData_AccountWrapper) isGlobalStateData_Datum() {}

func (*GlobalStateData_GlobalState) isGlobalStateData_Datum() {}

type GlobalStateStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datum *GlobalStateData `protobuf:"bytes,1,opt,name=datum,proto3" json:"datum,omitempty"`
}

func (x *GlobalStateStreamResponse) Reset() {
	*x = GlobalStateStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalStateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalStateStreamResponse) ProtoMessage() {}

func (x *GlobalStateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalStateStreamResponse.ProtoReflect.Descriptor instead.
func (*GlobalStateStreamResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{20}
}

func (x *GlobalStateStreamResponse) GetDatum() *GlobalStateData {
	if x != nil {
		return x.Datum
	}
	return nil
}

type AppEventStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppEventStreamRequest) Reset() {
	*x = AppEventStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppEventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppEventStreamRequest) ProtoMessage() {}

func (x *AppEventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppEventStreamRequest.ProtoReflect.Descriptor instead.
func (*AppEventStreamRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{21}
}

type AppEventStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *AppEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *AppEventStreamResponse) Reset() {
	*x = AppEventStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppEventStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppEventStreamResponse) ProtoMessage() {}

func (x *AppEventStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_global_state_types_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppEventStreamResponse.ProtoReflect.Descriptor instead.
func (*AppEventStreamResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_global_state_types_proto_rawDescGZIP(), []int{22}
}

func (x *AppEventStreamResponse) GetEvent() *AppEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

var File_spacemesh_v1_global_state_types_proto protoreflect.FileDescriptor

var file_spacemesh_v1_global_state_types_proto_rawDesc = []byte{
	0x0a, 0x25, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x58, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x43,
	0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x22, 0x48, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x51, 0x0a,
	0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x22, 0x79, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x53, 0x0a, 0x18, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x4c, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x8b,
	0x01, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xaf, 0x04, 0x0a,
	0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x4a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x2f, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x76, 0x6d, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x76, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xfa, 0x01, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x1e, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55,
	0x4c, 0x54, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x02,
	0x12, 0x28, 0x0a, 0x24, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x45,
	0x58, 0x43, 0x45, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x27, 0x0a, 0x23, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x49, 0x4e, 0x53, 0x55, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x41,
	0x53, 0x10, 0x04, 0x12, 0x29, 0x0a, 0x25, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x49, 0x4e, 0x53, 0x55, 0x46, 0x46,
	0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x53, 0x10, 0x05, 0x22, 0xc6,
	0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3c,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x40, 0x0a, 0x0f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x07,
	0x0a, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x7d, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x45, 0x0a, 0x1a, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a,
	0x1b, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x53,
	0x6d, 0x65, 0x73, 0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x09, 0x73, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6f, 0x0a, 0x18, 0x53, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x5f, 0x0a, 0x0f, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2f, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x17, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x18, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x8e, 0x02, 0x0a,
	0x0f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x40,
	0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x12, 0x42, 0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x50, 0x0a,
	0x19, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x64, 0x61,
	0x74, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x22,
	0x17, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2a, 0x9c, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x50, 0x54,
	0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x02,
	0x12, 0x1d, 0x0a, 0x19, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x04, 0x2a,
	0xe2, 0x01, 0x0a, 0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x22, 0x47, 0x4c, 0x4f, 0x42, 0x41,
	0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x4c, 0x41,
	0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x2e, 0x0a, 0x2a, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x50, 0x54, 0x10, 0x01, 0x12,
	0x21, 0x0a, 0x1d, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44,
	0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x2c, 0x0a, 0x28, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x46, 0x4c, 0x41, 0x47,
	0x5f, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x48, 0x41,
	0x53, 0x48, 0x10, 0x08, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x6f, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_spacemesh_v1_global_state_types_proto_rawDescOnce sync.Once
	file_spacemesh_v1_global_state_types_proto_rawDescData = file_spacemesh_v1_global_state_types_proto_rawDesc
)

func file_spacemesh_v1_global_state_types_proto_rawDescGZIP() []byte {
	file_spacemesh_v1_global_state_types_proto_rawDescOnce.Do(func() {
		file_spacemesh_v1_global_state_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_spacemesh_v1_global_state_types_proto_rawDescData)
	})
	return file_spacemesh_v1_global_state_types_proto_rawDescData
}

var file_spacemesh_v1_global_state_types_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spacemesh_v1_global_state_types_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_spacemesh_v1_global_state_types_proto_goTypes = []interface{}{
	(AccountDataFlag)(0),                      // 0: spacemesh.v1.AccountDataFlag
	(GlobalStateDataFlag)(0),                  // 1: spacemesh.v1.GlobalStateDataFlag
	(TransactionReceipt_TransactionResult)(0), // 2: spacemesh.v1.TransactionReceipt.TransactionResult
	(*AccountState)(nil),                      // 3: spacemesh.v1.AccountState
	(*Account)(nil),                           // 4: spacemesh.v1.Account
	(*AccountRequest)(nil),                    // 5: spacemesh.v1.AccountRequest
	(*AccountResponse)(nil),                   // 6: spacemesh.v1.AccountResponse
	(*AccountDataFilter)(nil),                 // 7: spacemesh.v1.AccountDataFilter
	(*AccountDataStreamRequest)(nil),          // 8: spacemesh.v1.AccountDataStreamRequest
	(*AccountDataStreamResponse)(nil),         // 9: spacemesh.v1.AccountDataStreamResponse
	(*AccountDataQueryRequest)(nil),           // 10: spacemesh.v1.AccountDataQueryRequest
	(*TransactionReceipt)(nil),                // 11: spacemesh.v1.TransactionReceipt
	(*AccountData)(nil),                       // 12: spacemesh.v1.AccountData
	(*AccountDataQueryResponse)(nil),          // 13: spacemesh.v1.AccountDataQueryResponse
	(*SmesherRewardStreamRequest)(nil),        // 14: spacemesh.v1.SmesherRewardStreamRequest
	(*SmesherRewardStreamResponse)(nil),       // 15: spacemesh.v1.SmesherRewardStreamResponse
	(*SmesherDataQueryRequest)(nil),           // 16: spacemesh.v1.SmesherDataQueryRequest
	(*SmesherDataQueryResponse)(nil),          // 17: spacemesh.v1.SmesherDataQueryResponse
	(*GlobalStateHash)(nil),                   // 18: spacemesh.v1.GlobalStateHash
	(*GlobalStateHashRequest)(nil),            // 19: spacemesh.v1.GlobalStateHashRequest
	(*GlobalStateHashResponse)(nil),           // 20: spacemesh.v1.GlobalStateHashResponse
	(*GlobalStateStreamRequest)(nil),          // 21: spacemesh.v1.GlobalStateStreamRequest
	(*GlobalStateData)(nil),                   // 22: spacemesh.v1.GlobalStateData
	(*GlobalStateStreamResponse)(nil),         // 23: spacemesh.v1.GlobalStateStreamResponse
	(*AppEventStreamRequest)(nil),             // 24: spacemesh.v1.AppEventStreamRequest
	(*AppEventStreamResponse)(nil),            // 25: spacemesh.v1.AppEventStreamResponse
	(*Amount)(nil),                            // 26: spacemesh.v1.Amount
	(*AccountId)(nil),                         // 27: spacemesh.v1.AccountId
	(*TransactionId)(nil),                     // 28: spacemesh.v1.TransactionId
	(*LayerNumber)(nil),                       // 29: spacemesh.v1.LayerNumber
	(*Reward)(nil),                            // 30: spacemesh.v1.Reward
	(*SmesherId)(nil),                         // 31: spacemesh.v1.SmesherId
	(*AppEvent)(nil),                          // 32: spacemesh.v1.AppEvent
}
var file_spacemesh_v1_global_state_types_proto_depIdxs = []int32{
	26, // 0: spacemesh.v1.AccountState.balance:type_name -> spacemesh.v1.Amount
	27, // 1: spacemesh.v1.Account.account_id:type_name -> spacemesh.v1.AccountId
	3,  // 2: spacemesh.v1.Account.state_current:type_name -> spacemesh.v1.AccountState
	3,  // 3: spacemesh.v1.Account.state_projected:type_name -> spacemesh.v1.AccountState
	27, // 4: spacemesh.v1.AccountRequest.account_id:type_name -> spacemesh.v1.AccountId
	4,  // 5: spacemesh.v1.AccountResponse.account_wrapper:type_name -> spacemesh.v1.Account
	27, // 6: spacemesh.v1.AccountDataFilter.account_id:type_name -> spacemesh.v1.AccountId
	7,  // 7: spacemesh.v1.AccountDataStreamRequest.filter:type_name -> spacemesh.v1.AccountDataFilter
	12, // 8: spacemesh.v1.AccountDataStreamResponse.datum:type_name -> spacemesh.v1.AccountData
	7,  // 9: spacemesh.v1.AccountDataQueryRequest.filter:type_name -> spacemesh.v1.AccountDataFilter
	28, // 10: spacemesh.v1.TransactionReceipt.id:type_name -> spacemesh.v1.TransactionId
	2,  // 11: spacemesh.v1.TransactionReceipt.result:type_name -> spacemesh.v1.TransactionReceipt.TransactionResult
	26, // 12: spacemesh.v1.TransactionReceipt.fee:type_name -> spacemesh.v1.Amount
	29, // 13: spacemesh.v1.TransactionReceipt.layer:type_name -> spacemesh.v1.LayerNumber
	30, // 14: spacemesh.v1.AccountData.reward:type_name -> spacemesh.v1.Reward
	11, // 15: spacemesh.v1.AccountData.receipt:type_name -> spacemesh.v1.TransactionReceipt
	4,  // 16: spacemesh.v1.AccountData.account_wrapper:type_name -> spacemesh.v1.Account
	12, // 17: spacemesh.v1.AccountDataQueryResponse.account_item:type_name -> spacemesh.v1.AccountData
	31, // 18: spacemesh.v1.SmesherRewardStreamRequest.id:type_name -> spacemesh.v1.SmesherId
	30, // 19: spacemesh.v1.SmesherRewardStreamResponse.reward:type_name -> spacemesh.v1.Reward
	31, // 20: spacemesh.v1.SmesherDataQueryRequest.smesher_id:type_name -> spacemesh.v1.SmesherId
	30, // 21: spacemesh.v1.SmesherDataQueryResponse.rewards:type_name -> spacemesh.v1.Reward
	29, // 22: spacemesh.v1.GlobalStateHash.layer:type_name -> spacemesh.v1.LayerNumber
	18, // 23: spacemesh.v1.GlobalStateHashResponse.response:type_name -> spacemesh.v1.GlobalStateHash
	30, // 24: spacemesh.v1.GlobalStateData.reward:type_name -> spacemesh.v1.Reward
	11, // 25: spacemesh.v1.GlobalStateData.receipt:type_name -> spacemesh.v1.TransactionReceipt
	4,  // 26: spacemesh.v1.GlobalStateData.account_wrapper:type_name -> spacemesh.v1.Account
	18, // 27: spacemesh.v1.GlobalStateData.global_state:type_name -> spacemesh.v1.GlobalStateHash
	22, // 28: spacemesh.v1.GlobalStateStreamResponse.datum:type_name -> spacemesh.v1.GlobalStateData
	32, // 29: spacemesh.v1.AppEventStreamResponse.event:type_name -> spacemesh.v1.AppEvent
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_spacemesh_v1_global_state_types_proto_init() }
func file_spacemesh_v1_global_state_types_proto_init() {
	if File_spacemesh_v1_global_state_types_proto != nil {
		return
	}
	file_spacemesh_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_spacemesh_v1_global_state_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDataStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDataStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDataQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDataQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmesherRewardStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmesherRewardStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmesherDataQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmesherDataQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalStateHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalStateHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalStateHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalStateStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalStateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalStateStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppEventStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_global_state_types_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppEventStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_spacemesh_v1_global_state_types_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*AccountData_Reward)(nil),
		(*AccountData_Receipt)(nil),
		(*AccountData_AccountWrapper)(nil),
	}
	file_spacemesh_v1_global_state_types_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*GlobalStateData_Reward)(nil),
		(*GlobalStateData_Receipt)(nil),
		(*GlobalStateData_AccountWrapper)(nil),
		(*GlobalStateData_GlobalState)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spacemesh_v1_global_state_types_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spacemesh_v1_global_state_types_proto_goTypes,
		DependencyIndexes: file_spacemesh_v1_global_state_types_proto_depIdxs,
		EnumInfos:         file_spacemesh_v1_global_state_types_proto_enumTypes,
		MessageInfos:      file_spacemesh_v1_global_state_types_proto_msgTypes,
	}.Build()
	File_spacemesh_v1_global_state_types_proto = out.File
	file_spacemesh_v1_global_state_types_proto_rawDesc = nil
	file_spacemesh_v1_global_state_types_proto_goTypes = nil
	file_spacemesh_v1_global_state_types_proto_depIdxs = nil
}
